

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 30 20:17:16 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225                           
   226                           	psect	idataBANK0
   227  048E                     __pidataBANK0:
   228                           
   229                           ;initializer for _randx
   230  048E  3401               	retlw	1
   231  048F  3400               	retlw	0
   232  0490  3400               	retlw	0
   233  0491  3400               	retlw	0
   234  000B                     _INTCON	set	11
   235  0006                     _PORTBbits	set	6
   236  0007                     _PORTCbits	set	7
   237  000B                     _INTCONbits	set	11
   238  0001                     _TMR0	set	1
   239  0008                     _PORTD	set	8
   240  0005                     _PORTA	set	5
   241  0096                     _IOCB	set	150
   242  0095                     _WPUB	set	149
   243  0089                     _TRISE	set	137
   244  0086                     _TRISB	set	134
   245  0088                     _TRISD	set	136
   246  0085                     _TRISA	set	133
   247  0087                     _TRISC	set	135
   248  0081                     _OPTION_REG	set	129
   249  0189                     _ANSELH	set	393
   250                           
   251                           	psect	cinit
   252  000F                     start_initialization:	
   253                           ; #config settings
   254                           
   255  000F                     __initialization:
   256                           
   257                           ; Initialize objects allocated to BANK0
   258  000F  120A  118A  248E  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   259  0014  00CE               	movwf	__pdataBANK0& (0+127)
   260  0015  120A  118A  248F  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   261  001A  00CF               	movwf	(__pdataBANK0+1)& (0+127)
   262  001B  120A  118A  2490  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   263  0020  00D0               	movwf	(__pdataBANK0+2)& (0+127)
   264  0021  120A  118A  2491  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   265  0026  00D1               	movwf	(__pdataBANK0+3)& (0+127)
   266                           
   267                           ; Clear objects allocated to BANK0
   268  0027  1383               	bcf	3,7	;select IRP bank0
   269  0028  3020               	movlw	low __pbssBANK0
   270  0029  0084               	movwf	4
   271  002A  303A               	movlw	low (__pbssBANK0+26)
   272  002B  120A  118A  2478  120A  118A  	fcall	clear_ram0
   273                           
   274                           ; Clear objects allocated to COMMON
   275  0030  01FA               	clrf	__pbssCOMMON& (0+127)
   276  0031  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   277  0032                     end_of_initialization:	
   278                           ;End of C runtime variable initialization code
   279                           
   280  0032                     __end_of__initialization:
   281  0032  0183               	clrf	3
   282  0033  120A  118A  2836   	ljmp	_main	;jump to C main() function
   283                           
   284                           	psect	bssCOMMON
   285  007A                     __pbssCOMMON:
   286  007A                     _TMR0_aux:
   287  007A                     	ds	2
   288                           
   289                           	psect	bssBANK0
   290  0020                     __pbssBANK0:
   291  0020                     _vetor_sequencia:
   292  0020                     	ds	24
   293  0038                     _botao_press:
   294  0038                     	ds	2
   295                           
   296                           	psect	dataBANK0
   297  004E                     __pdataBANK0:
   298  004E                     _randx:
   299  004E                     	ds	4
   300                           
   301                           	psect	clrtext
   302  0478                     clear_ram0:	
   303                           ;	Called with FSR containing the base address, and
   304                           ;	W with the last address+1
   305                           
   306  0478  0064               	clrwdt	;clear the watchdog before getting into this loop
   307  0479                     clrloop0:
   308  0479  0180               	clrf	0	;clear RAM location pointed to by FSR
   309  047A  0A84               	incf	4,f	;increment pointer
   310  047B  0604               	xorwf	4,w	;XOR with final address
   311  047C  1903               	btfsc	3,2	;have we reached the end yet?
   312  047D  3400               	retlw	0	;all done for this memory range, return
   313  047E  0604               	xorwf	4,w	;XOR again to restore value
   314  047F  2C79               	goto	clrloop0	;do the next byte
   315                           
   316                           	psect	cstackCOMMON
   317  0070                     __pcstackCOMMON:
   318  0070                     ?_delay_500ms:
   319  0070                     ?_delay_100ms:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_desliga_leds:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_liga_leds:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_print_sequencia:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_botao_pressionado:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_limpa_vetor:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_my_isr_routine:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ??_my_isr_routine:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_main:	
   344                           ; 1 bytes @ 0x0
   345                           
   346                           
   347                           ; 1 bytes @ 0x0
   348  0070                     	ds	2
   349  0072                     ?_srand:
   350  0072                     ??_delay_500ms:	
   351                           ; 1 bytes @ 0x2
   352                           
   353  0072                     ??_delay_100ms:	
   354                           ; 1 bytes @ 0x2
   355                           
   356  0072                     ??_desliga_leds:	
   357                           ; 1 bytes @ 0x2
   358                           
   359  0072                     ??_liga_leds:	
   360                           ; 1 bytes @ 0x2
   361                           
   362  0072                     ?_sinalizacao:	
   363                           ; 1 bytes @ 0x2
   364                           
   365  0072                     ??_limpa_vetor:	
   366                           ; 1 bytes @ 0x2
   367                           
   368  0072                     ?_int_para_7seg:	
   369                           ; 1 bytes @ 0x2
   370                           
   371  0072                     ?___awdiv:	
   372                           ; 2 bytes @ 0x2
   373                           
   374  0072                     ?___awmod:	
   375                           ; 2 bytes @ 0x2
   376                           
   377  0072                     ?___lmul:	
   378                           ; 2 bytes @ 0x2
   379                           
   380  0072                     int_para_7seg@numero:	
   381                           ; 4 bytes @ 0x2
   382                           
   383  0072                     sinalizacao@botao:	
   384                           ; 2 bytes @ 0x2
   385                           
   386  0072                     ___awdiv@divisor:	
   387                           ; 2 bytes @ 0x2
   388                           
   389  0072                     ___awmod@divisor:	
   390                           ; 2 bytes @ 0x2
   391                           
   392  0072                     srand@x:	
   393                           ; 2 bytes @ 0x2
   394                           
   395  0072                     ___lmul@multiplier:	
   396                           ; 2 bytes @ 0x2
   397                           
   398                           
   399                           ; 4 bytes @ 0x2
   400  0072                     	ds	1
   401  0073                     limpa_vetor@i:
   402                           
   403                           ; 2 bytes @ 0x3
   404  0073                     	ds	1
   405  0074                     ??_srand:
   406  0074                     ??_int_para_7seg:	
   407                           ; 1 bytes @ 0x4
   408                           
   409  0074                     ??_sinalizacao:	
   410                           ; 1 bytes @ 0x4
   411                           
   412  0074                     ??_print_sequencia:	
   413                           ; 1 bytes @ 0x4
   414                           
   415  0074                     ??_botao_pressionado:	
   416                           ; 1 bytes @ 0x4
   417                           
   418  0074                     botao_pressionado@botao:	
   419                           ; 1 bytes @ 0x4
   420                           
   421  0074                     ___awdiv@dividend:	
   422                           ; 2 bytes @ 0x4
   423                           
   424  0074                     ___awmod@dividend:	
   425                           ; 2 bytes @ 0x4
   426                           
   427                           
   428                           ; 2 bytes @ 0x4
   429  0074                     	ds	2
   430  0076                     ??___awdiv:
   431  0076                     ??___awmod:	
   432                           ; 1 bytes @ 0x6
   433                           
   434  0076                     ?_verifica_sequencia:	
   435                           ; 1 bytes @ 0x6
   436                           
   437  0076                     ___lmul@multiplicand:	
   438                           ; 2 bytes @ 0x6
   439                           
   440                           
   441                           ; 4 bytes @ 0x6
   442  0076                     	ds	1
   443  0077                     ___awmod@counter:
   444  0077                     print_sequencia@i:	
   445                           ; 1 bytes @ 0x7
   446                           
   447                           
   448                           ; 2 bytes @ 0x7
   449  0077                     	ds	1
   450  0078                     ___awmod@sign:
   451  0078                     verifica_sequencia@i:	
   452                           ; 1 bytes @ 0x8
   453                           
   454                           
   455                           ; 2 bytes @ 0x8
   456  0078                     	ds	1
   457  0079                     ??_imprime_sequencia:
   458                           
   459                           ; 1 bytes @ 0x9
   460  0079                     	ds	1
   461                           
   462                           	psect	cstackBANK0
   463  003A                     __pcstackBANK0:
   464  003A                     ??_verifica_sequencia:
   465  003A                     ??___lmul:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  003A                     ___awdiv@counter:	
   469                           ; 1 bytes @ 0x0
   470                           
   471                           
   472                           ; 1 bytes @ 0x0
   473  003A                     	ds	1
   474  003B                     ___awdiv@sign:
   475  003B                     ___lmul@product:	
   476                           ; 1 bytes @ 0x1
   477                           
   478                           
   479                           ; 4 bytes @ 0x1
   480  003B                     	ds	1
   481  003C                     ___awdiv@quotient:
   482                           
   483                           ; 2 bytes @ 0x2
   484  003C                     	ds	2
   485  003E                     ?_imprime_sequencia:
   486  003E                     imprime_sequencia@sequencia:	
   487                           ; 1 bytes @ 0x4
   488                           
   489                           
   490                           ; 2 bytes @ 0x4
   491  003E                     	ds	1
   492  003F                     ?_rand:
   493                           
   494                           ; 2 bytes @ 0x5
   495  003F                     	ds	1
   496  0040                     imprime_sequencia@dezenas:
   497                           
   498                           ; 2 bytes @ 0x6
   499  0040                     	ds	1
   500  0041                     ??_rand:
   501                           
   502                           ; 1 bytes @ 0x7
   503  0041                     	ds	1
   504  0042                     imprime_sequencia@unidades:
   505                           
   506                           ; 2 bytes @ 0x8
   507  0042                     	ds	4
   508  0046                     ?_gera_cor_aleatoria:
   509                           
   510                           ; 2 bytes @ 0xC
   511  0046                     	ds	2
   512  0048                     ??_gera_cor_aleatoria:
   513                           
   514                           ; 1 bytes @ 0xE
   515  0048                     	ds	2
   516  004A                     ??_main:
   517                           
   518                           ; 1 bytes @ 0x10
   519  004A                     	ds	2
   520  004C                     main@sequencia:
   521                           
   522                           ; 2 bytes @ 0x12
   523  004C                     	ds	2
   524                           
   525                           	psect	maintext
   526  0036                     __pmaintext:	
   527 ;;
   528 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   529 ;;
   530 ;; *************** function _main *****************
   531 ;; Defined at:
   532 ;;		line 279 in file "main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;  sequencia       2   18[BANK0 ] int 
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : B00/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         0       0       0       0       0
   547 ;;      Locals:         0       2       0       0       0
   548 ;;      Temps:          0       2       0       0       0
   549 ;;      Totals:         0       4       0       0       0
   550 ;;Total ram usage:        4 bytes
   551 ;; Hardware stack levels required when called: 5
   552 ;; This function calls:
   553 ;;		_delay_100ms
   554 ;;		_delay_500ms
   555 ;;		_desliga_leds
   556 ;;		_gera_cor_aleatoria
   557 ;;		_imprime_sequencia
   558 ;;		_liga_leds
   559 ;;		_limpa_vetor
   560 ;;		_print_sequencia
   561 ;;		_srand
   562 ;;		_verifica_sequencia
   563 ;; This function is called by:
   564 ;;		Startup code after reset
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           
   569                           ;psect for function _main
   570  0036                     _main:
   571  0036                     l1725:	
   572                           ;incstack = 0
   573                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   574                           
   575                           
   576                           ;main.c: 280:     OPTION_REG = 0b00010101;
   577  0036  3015               	movlw	21
   578  0037  1683               	bsf	3,5	;RP0=1, select bank1
   579  0038  1303               	bcf	3,6	;RP1=0, select bank1
   580  0039  0081               	movwf	1	;volatile
   581                           
   582                           ;main.c: 281:     INTCON = 0b10100000;
   583  003A  30A0               	movlw	160
   584  003B  008B               	movwf	11	;volatile
   585  003C                     l1727:
   586                           
   587                           ;main.c: 282:     TRISC = 0b00000000;
   588  003C  0187               	clrf	7	;volatile
   589  003D                     l1729:
   590                           
   591                           ;main.c: 283:     TRISA = 0b00000000;
   592  003D  0185               	clrf	5	;volatile
   593  003E                     l1731:
   594                           
   595                           ;main.c: 284:     TRISD = 0b00000000;
   596  003E  0188               	clrf	8	;volatile
   597  003F                     l1733:
   598                           
   599                           ;main.c: 285:     TRISB = 0b11111111;
   600  003F  30FF               	movlw	255
   601  0040  0086               	movwf	6	;volatile
   602  0041                     l1735:
   603                           
   604                           ;main.c: 286:     TRISE = 0b11111111;
   605  0041  30FF               	movlw	255
   606  0042  0089               	movwf	9	;volatile
   607  0043                     l1737:
   608                           
   609                           ;main.c: 287:     WPUB = 0b11111111;
   610  0043  30FF               	movlw	255
   611  0044  0095               	movwf	21	;volatile
   612                           
   613                           ;main.c: 288:     IOCB = 0b00000000;
   614  0045  0196               	clrf	22	;volatile
   615                           
   616                           ;main.c: 289:     ANSELH = 0b00000000;
   617  0046  1683               	bsf	3,5	;RP0=1, select bank3
   618  0047  1703               	bsf	3,6	;RP1=1, select bank3
   619  0048  0189               	clrf	9	;volatile
   620  0049                     l1739:
   621                           
   622                           ;main.c: 292:     imprime_sequencia(sequencia);
   623  0049  3000               	movlw	0
   624  004A  1283               	bcf	3,5	;RP0=0, select bank0
   625  004B  1303               	bcf	3,6	;RP1=0, select bank0
   626  004C  00BE               	movwf	imprime_sequencia@sequencia
   627  004D  00BF               	movwf	imprime_sequencia@sequencia+1
   628  004E  120A  118A  2313  120A  118A  	fcall	_imprime_sequencia
   629  0053                     l1741:
   630                           
   631                           ;main.c: 293:     liga_leds();
   632  0053  120A  118A  2480  120A  118A  	fcall	_liga_leds
   633  0058                     l1743:
   634                           
   635                           ;main.c: 294:     delay_500ms();
   636  0058  120A  118A  2417  120A  118A  	fcall	_delay_500ms
   637  005D                     l1745:
   638                           
   639                           ;main.c: 295:     desliga_leds();
   640  005D  120A  118A  2487  120A  118A  	fcall	_desliga_leds
   641  0062                     l1747:
   642                           
   643                           ;main.c: 298:     {;main.c: 299:         sequencia=0;
   644  0062  1283               	bcf	3,5	;RP0=0, select bank0
   645  0063  1303               	bcf	3,6	;RP1=0, select bank0
   646  0064  01CC               	clrf	main@sequencia
   647  0065  01CD               	clrf	main@sequencia+1
   648  0066                     l1749:
   649                           
   650                           ;main.c: 300:         imprime_sequencia(sequencia);
   651  0066  3000               	movlw	0
   652  0067  00BE               	movwf	imprime_sequencia@sequencia
   653  0068  00BF               	movwf	imprime_sequencia@sequencia+1
   654  0069  120A  118A  2313  120A  118A  	fcall	_imprime_sequencia
   655  006E                     l1751:
   656                           
   657                           ;main.c: 301:         liga_leds();
   658  006E  120A  118A  2480  120A  118A  	fcall	_liga_leds
   659  0073                     l1753:
   660                           
   661                           ;main.c: 302:         delay_500ms();
   662  0073  120A  118A  2417  120A  118A  	fcall	_delay_500ms
   663                           
   664                           ;main.c: 303:         desliga_leds();
   665  0078  120A  118A  2487  120A  118A  	fcall	_desliga_leds
   666  007D                     l1755:
   667                           
   668                           ;main.c: 304:         limpa_vetor();
   669  007D  120A  118A  23F8  120A  118A  	fcall	_limpa_vetor
   670  0082                     l134:	
   671                           ;main.c: 306:         {;main.c: 308:         }
   672                           
   673                           
   674                           ;main.c: 305:         while(PORTBbits.RB0)
   675  0082  1283               	bcf	3,5	;RP0=0, select bank0
   676  0083  1303               	bcf	3,6	;RP1=0, select bank0
   677  0084  1806               	btfsc	6,0	;volatile
   678  0085  2887               	goto	u1081
   679  0086  2888               	goto	u1080
   680  0087                     u1081:
   681  0087  2882               	goto	l134
   682  0088                     u1080:
   683  0088                     l1757:
   684                           
   685                           ;main.c: 310:         srand((unsigned) TMR0);
   686  0088  0801               	movf	1,w	;volatile
   687  0089  00CA               	movwf	??_main
   688  008A  01CB               	clrf	??_main+1
   689  008B  084A               	movf	??_main,w
   690  008C  00F2               	movwf	srand@x
   691  008D  084B               	movf	??_main+1,w
   692  008E  00F3               	movwf	srand@x+1
   693  008F  120A  118A  246F  120A  118A  	fcall	_srand
   694  0094                     l1759:
   695                           
   696                           ;main.c: 312:         {;main.c: 313:             vetor_sequencia[sequencia]=gera_cor_ale
      +                          atoria();
   697  0094  120A  118A  2443  120A  118A  	fcall	_gera_cor_aleatoria
   698  0099  1283               	bcf	3,5	;RP0=0, select bank0
   699  009A  1303               	bcf	3,6	;RP1=0, select bank0
   700  009B  084C               	movf	main@sequencia,w
   701  009C  00CA               	movwf	??_main
   702  009D  074A               	addwf	??_main,w
   703  009E  3E20               	addlw	(low (_vetor_sequencia| 0))& (0+255)
   704  009F  0084               	movwf	4
   705  00A0  0846               	movf	?_gera_cor_aleatoria,w
   706  00A1  1383               	bcf	3,7	;select IRP bank0
   707  00A2  0080               	movwf	0
   708  00A3  0A84               	incf	4,f
   709  00A4  0847               	movf	?_gera_cor_aleatoria+1,w
   710  00A5  0080               	movwf	0
   711  00A6                     l1761:
   712                           
   713                           ;main.c: 314:             sequencia++;
   714  00A6  3001               	movlw	1
   715  00A7  07CC               	addwf	main@sequencia,f
   716  00A8  1803               	skipnc
   717  00A9  0ACD               	incf	main@sequencia+1,f
   718  00AA  3000               	movlw	0
   719  00AB  07CD               	addwf	main@sequencia+1,f
   720  00AC                     l1763:
   721                           
   722                           ;main.c: 315:             imprime_sequencia(sequencia);
   723  00AC  084D               	movf	main@sequencia+1,w
   724  00AD  00BF               	movwf	imprime_sequencia@sequencia+1
   725  00AE  084C               	movf	main@sequencia,w
   726  00AF  00BE               	movwf	imprime_sequencia@sequencia
   727  00B0  120A  118A  2313  120A  118A  	fcall	_imprime_sequencia
   728  00B5                     l1765:
   729                           
   730                           ;main.c: 316:             print_sequencia();
   731  00B5  120A  118A  23C9  120A  118A  	fcall	_print_sequencia
   732  00BA                     l1767:
   733                           
   734                           ;main.c: 317:             delay_100ms();
   735  00BA  120A  118A  242D  120A  118A  	fcall	_delay_100ms
   736  00BF                     l1769:
   737                           
   738                           ;main.c: 318:             if(verifica_sequencia()==0)
   739  00BF  120A  118A  22CD  120A  118A  	fcall	_verifica_sequencia
   740  00C4  0876               	movf	?_verifica_sequencia,w
   741  00C5  0477               	iorwf	?_verifica_sequencia+1,w
   742  00C6  1D03               	btfss	3,2
   743  00C7  28C9               	goto	u1091
   744  00C8  28CA               	goto	u1090
   745  00C9                     u1091:
   746  00C9  28CE               	goto	l1773
   747  00CA                     u1090:
   748  00CA                     l1771:
   749                           
   750                           ;main.c: 319:             {;main.c: 320:                sequencia=0;
   751  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   752  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   753  00CC  01CC               	clrf	main@sequencia
   754  00CD  01CD               	clrf	main@sequencia+1
   755  00CE                     l1773:
   756                           
   757                           ;main.c: 322:             if (sequencia==12)
   758  00CE  300C               	movlw	12
   759  00CF  1283               	bcf	3,5	;RP0=0, select bank0
   760  00D0  1303               	bcf	3,6	;RP1=0, select bank0
   761  00D1  064C               	xorwf	main@sequencia,w
   762  00D2  044D               	iorwf	main@sequencia+1,w
   763  00D3  1D03               	btfss	3,2
   764  00D4  28D6               	goto	u1101
   765  00D5  28D7               	goto	u1100
   766  00D6                     u1101:
   767  00D6  2915               	goto	l1801
   768  00D7                     u1100:
   769  00D7                     l1775:
   770                           
   771                           ;main.c: 323:             {;main.c: 324:                 sequencia =0;
   772  00D7  01CC               	clrf	main@sequencia
   773  00D8  01CD               	clrf	main@sequencia+1
   774  00D9                     l1777:
   775                           
   776                           ;main.c: 325:                 liga_leds();
   777  00D9  120A  118A  2480  120A  118A  	fcall	_liga_leds
   778  00DE                     l1779:
   779                           
   780                           ;main.c: 326:                 delay_100ms();
   781  00DE  120A  118A  242D  120A  118A  	fcall	_delay_100ms
   782  00E3                     l1781:
   783                           
   784                           ;main.c: 327:                 desliga_leds();
   785  00E3  120A  118A  2487  120A  118A  	fcall	_desliga_leds
   786  00E8                     l1783:
   787                           
   788                           ;main.c: 328:                 liga_leds();
   789  00E8  120A  118A  2480  120A  118A  	fcall	_liga_leds
   790  00ED                     l1785:
   791                           
   792                           ;main.c: 329:                 delay_100ms();
   793  00ED  120A  118A  242D  120A  118A  	fcall	_delay_100ms
   794  00F2                     l1787:
   795                           
   796                           ;main.c: 330:                 desliga_leds();
   797  00F2  120A  118A  2487  120A  118A  	fcall	_desliga_leds
   798  00F7                     l1789:
   799                           
   800                           ;main.c: 331:                 liga_leds();
   801  00F7  120A  118A  2480  120A  118A  	fcall	_liga_leds
   802  00FC                     l1791:
   803                           
   804                           ;main.c: 332:                 delay_100ms();
   805  00FC  120A  118A  242D  120A  118A  	fcall	_delay_100ms
   806  0101                     l1793:
   807                           
   808                           ;main.c: 333:                 desliga_leds();
   809  0101  120A  118A  2487  120A  118A  	fcall	_desliga_leds
   810  0106                     l1795:
   811                           
   812                           ;main.c: 334:                 liga_leds();
   813  0106  120A  118A  2480  120A  118A  	fcall	_liga_leds
   814  010B                     l1797:
   815                           
   816                           ;main.c: 335:                 delay_100ms();
   817  010B  120A  118A  242D  120A  118A  	fcall	_delay_100ms
   818  0110                     l1799:
   819                           
   820                           ;main.c: 336:                 desliga_leds();
   821  0110  120A  118A  2487  120A  118A  	fcall	_desliga_leds
   822  0115                     l1801:
   823                           
   824                           ;main.c: 338:         }while(sequencia);
   825  0115  1283               	bcf	3,5	;RP0=0, select bank0
   826  0116  1303               	bcf	3,6	;RP1=0, select bank0
   827  0117  084C               	movf	main@sequencia,w
   828  0118  044D               	iorwf	main@sequencia+1,w
   829  0119  1D03               	btfss	3,2
   830  011A  291C               	goto	u1111
   831  011B  291D               	goto	u1110
   832  011C                     u1111:
   833  011C  2894               	goto	l1759
   834  011D                     u1110:
   835  011D  2862               	goto	l1747
   836  011E  120A  118A  280C   	ljmp	start
   837  0121                     __end_of_main:
   838                           
   839                           	psect	text1
   840  02CD                     __ptext1:	
   841 ;; *************** function _verifica_sequencia *****************
   842 ;; Defined at:
   843 ;;		line 238 in file "main.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  i               2    8[COMMON] int 
   848 ;; Return value:  Size  Location     Type
   849 ;;                  2    6[COMMON] int 
   850 ;; Registers used:
   851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   857 ;;      Params:         2       0       0       0       0
   858 ;;      Locals:         2       0       0       0       0
   859 ;;      Temps:          0       3       0       0       0
   860 ;;      Totals:         4       3       0       0       0
   861 ;;Total ram usage:        7 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 4
   864 ;; This function calls:
   865 ;;		_botao_pressionado
   866 ;;		_delay_100ms
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           
   873                           ;psect for function _verifica_sequencia
   874  02CD                     _verifica_sequencia:
   875  02CD                     l1705:	
   876                           ;incstack = 0
   877                           ; Regs used in _verifica_sequencia: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   878                           
   879                           
   880                           ;main.c: 240:     int i=0;
   881  02CD  01F8               	clrf	verifica_sequencia@i
   882  02CE  01F9               	clrf	verifica_sequencia@i+1
   883                           
   884                           ;main.c: 241:     while (vetor_sequencia[i]!=0)
   885  02CF  2AFB               	goto	l1719
   886  02D0                     l1707:
   887                           
   888                           ;main.c: 242:     {;main.c: 243:         botao_pressionado();
   889  02D0  120A  118A  2356  120A  118A  	fcall	_botao_pressionado
   890  02D5                     l1709:
   891                           
   892                           ;main.c: 244:         if(botao_press==vetor_sequencia[i])
   893  02D5  0878               	movf	verifica_sequencia@i,w
   894  02D6  1283               	bcf	3,5	;RP0=0, select bank0
   895  02D7  1303               	bcf	3,6	;RP1=0, select bank0
   896  02D8  00BA               	movwf	??_verifica_sequencia
   897  02D9  073A               	addwf	??_verifica_sequencia,w
   898  02DA  3E20               	addlw	(low (_vetor_sequencia| 0))& (0+255)
   899  02DB  0084               	movwf	4
   900  02DC  1383               	bcf	3,7	;select IRP bank0
   901  02DD  0800               	movf	0,w
   902  02DE  00BB               	movwf	??_verifica_sequencia+1
   903  02DF  0A84               	incf	4,f
   904  02E0  0800               	movf	0,w
   905  02E1  00BC               	movwf	??_verifica_sequencia+2
   906  02E2  0839               	movf	_botao_press+1,w
   907  02E3  063C               	xorwf	??_verifica_sequencia+2,w
   908  02E4  1D03               	skipz
   909  02E5  2AE8               	goto	u1065
   910  02E6  0838               	movf	_botao_press,w
   911  02E7  063B               	xorwf	??_verifica_sequencia+1,w
   912  02E8                     u1065:
   913  02E8  1D03               	skipz
   914  02E9  2AEB               	goto	u1061
   915  02EA  2AEC               	goto	u1060
   916  02EB                     u1061:
   917  02EB  2AF8               	goto	l1715
   918  02EC                     u1060:
   919  02EC                     l1711:
   920                           
   921                           ;main.c: 245:         {;main.c: 246:             delay_100ms();
   922  02EC  120A  118A  242D  120A  118A  	fcall	_delay_100ms
   923  02F1                     l1713:
   924                           
   925                           ;main.c: 247:             i++;
   926  02F1  3001               	movlw	1
   927  02F2  07F8               	addwf	verifica_sequencia@i,f
   928  02F3  1803               	skipnc
   929  02F4  0AF9               	incf	verifica_sequencia@i+1,f
   930  02F5  3000               	movlw	0
   931  02F6  07F9               	addwf	verifica_sequencia@i+1,f
   932                           
   933                           ;main.c: 248:         }
   934  02F7  2AFB               	goto	l1719
   935  02F8                     l1715:
   936                           
   937                           ;main.c: 250:         {;main.c: 251:             return 0;
   938  02F8  01F6               	clrf	?_verifica_sequencia
   939  02F9  01F7               	clrf	?_verifica_sequencia+1
   940  02FA  2B12               	goto	l116
   941  02FB                     l1719:
   942                           
   943                           ;main.c: 241:     while (vetor_sequencia[i]!=0)
   944  02FB  0878               	movf	verifica_sequencia@i,w
   945  02FC  1283               	bcf	3,5	;RP0=0, select bank0
   946  02FD  1303               	bcf	3,6	;RP1=0, select bank0
   947  02FE  00BA               	movwf	??_verifica_sequencia
   948  02FF  073A               	addwf	??_verifica_sequencia,w
   949  0300  3E20               	addlw	(low (_vetor_sequencia| 0))& (0+255)
   950  0301  0084               	movwf	4
   951  0302  1383               	bcf	3,7	;select IRP bank0
   952  0303  0800               	movf	0,w
   953  0304  00BB               	movwf	??_verifica_sequencia+1
   954  0305  0A84               	incf	4,f
   955  0306  0800               	movf	0,w
   956  0307  00BC               	movwf	??_verifica_sequencia+2
   957  0308  083B               	movf	??_verifica_sequencia+1,w
   958  0309  043C               	iorwf	??_verifica_sequencia+2,w
   959  030A  1D03               	btfss	3,2
   960  030B  2B0D               	goto	u1071
   961  030C  2B0E               	goto	u1070
   962  030D                     u1071:
   963  030D  2AD0               	goto	l1707
   964  030E                     u1070:
   965  030E                     l1721:
   966                           
   967                           ;main.c: 254:     return 1;
   968  030E  3001               	movlw	1
   969  030F  00F6               	movwf	?_verifica_sequencia
   970  0310  3000               	movlw	0
   971  0311  00F7               	movwf	?_verifica_sequencia+1
   972  0312                     l116:
   973  0312  0008               	return
   974  0313                     __end_of_verifica_sequencia:
   975                           
   976                           	psect	text2
   977  0356                     __ptext2:	
   978 ;; *************** function _botao_pressionado *****************
   979 ;; Defined at:
   980 ;;		line 206 in file "main.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  botao           2    4[COMMON] int 
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   994 ;;      Params:         0       0       0       0       0
   995 ;;      Locals:         2       0       0       0       0
   996 ;;      Temps:          0       0       0       0       0
   997 ;;      Totals:         2       0       0       0       0
   998 ;;Total ram usage:        2 bytes
   999 ;; Hardware stack levels used: 1
  1000 ;; Hardware stack levels required when called: 3
  1001 ;; This function calls:
  1002 ;;		_sinalizacao
  1003 ;; This function is called by:
  1004 ;;		_verifica_sequencia
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           
  1009                           ;psect for function _botao_pressionado
  1010  0356                     _botao_pressionado:
  1011  0356                     l1623:	
  1012                           ;incstack = 0
  1013                           ; Regs used in _botao_pressionado: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1014                           
  1015                           
  1016                           ;main.c: 208:     int botao=0;
  1017  0356  01F4               	clrf	botao_pressionado@botao
  1018  0357  01F5               	clrf	botao_pressionado@botao+1
  1019                           
  1020                           ;main.c: 209:     while(botao==0)
  1021  0358  2B7E               	goto	l1635
  1022  0359                     l101:
  1023                           
  1024                           ;main.c: 210:     {;main.c: 211:         if(!PORTBbits.RB1)
  1025  0359  1283               	bcf	3,5	;RP0=0, select bank0
  1026  035A  1303               	bcf	3,6	;RP1=0, select bank0
  1027  035B  1886               	btfsc	6,1	;volatile
  1028  035C  2B5E               	goto	u901
  1029  035D  2B5F               	goto	u900
  1030  035E                     u901:
  1031  035E  2B63               	goto	l1627
  1032  035F                     u900:
  1033  035F                     l1625:
  1034                           
  1035                           ;main.c: 212:         {;main.c: 213:             botao=1;
  1036  035F  3001               	movlw	1
  1037  0360  00F4               	movwf	botao_pressionado@botao
  1038  0361  3000               	movlw	0
  1039  0362  00F5               	movwf	botao_pressionado@botao+1
  1040  0363                     l1627:
  1041                           
  1042                           ;main.c: 216:          if(!PORTBbits.RB2)
  1043  0363  1906               	btfsc	6,2	;volatile
  1044  0364  2B66               	goto	u911
  1045  0365  2B67               	goto	u910
  1046  0366                     u911:
  1047  0366  2B6C               	goto	l103
  1048  0367                     u910:
  1049  0367                     l1629:
  1050                           
  1051                           ;main.c: 217:         {;main.c: 218:             botao=2;
  1052  0367  3002               	movlw	2
  1053  0368  00F4               	movwf	botao_pressionado@botao
  1054  0369  3000               	movlw	0
  1055  036A  00F5               	movwf	botao_pressionado@botao+1
  1056                           
  1057                           ;main.c: 219:         }
  1058  036B  2B7E               	goto	l1635
  1059  036C                     l103:	
  1060                           ;main.c: 221:         else if(!PORTBbits.RB3)
  1061                           
  1062  036C  1986               	btfsc	6,3	;volatile
  1063  036D  2B6F               	goto	u921
  1064  036E  2B70               	goto	u920
  1065  036F                     u921:
  1066  036F  2B75               	goto	l105
  1067  0370                     u920:
  1068  0370                     l1631:
  1069                           
  1070                           ;main.c: 222:         {;main.c: 223:            botao=3;
  1071  0370  3003               	movlw	3
  1072  0371  00F4               	movwf	botao_pressionado@botao
  1073  0372  3000               	movlw	0
  1074  0373  00F5               	movwf	botao_pressionado@botao+1
  1075                           
  1076                           ;main.c: 224:         }
  1077  0374  2B7E               	goto	l1635
  1078  0375                     l105:	
  1079                           ;main.c: 226:         else if(!PORTBbits.RB4)
  1080                           
  1081  0375  1A06               	btfsc	6,4	;volatile
  1082  0376  2B78               	goto	u931
  1083  0377  2B79               	goto	u930
  1084  0378                     u931:
  1085  0378  2B7E               	goto	l104
  1086  0379                     u930:
  1087  0379                     l1633:
  1088                           
  1089                           ;main.c: 227:         {;main.c: 228:              botao=4;
  1090  0379  3004               	movlw	4
  1091  037A  00F4               	movwf	botao_pressionado@botao
  1092  037B  3000               	movlw	0
  1093  037C  00F5               	movwf	botao_pressionado@botao+1
  1094  037D  2B7E               	goto	l1635
  1095  037E                     l104:
  1096  037E                     l1635:
  1097                           
  1098                           ;main.c: 209:     while(botao==0)
  1099  037E  0874               	movf	botao_pressionado@botao,w
  1100  037F  0475               	iorwf	botao_pressionado@botao+1,w
  1101  0380  1903               	btfsc	3,2
  1102  0381  2B83               	goto	u941
  1103  0382  2B84               	goto	u940
  1104  0383                     u941:
  1105  0383  2B59               	goto	l101
  1106  0384                     u940:
  1107  0384                     l1637:
  1108                           
  1109                           ;main.c: 232:     sinalizacao(botao);
  1110  0384  0875               	movf	botao_pressionado@botao+1,w
  1111  0385  00F3               	movwf	sinalizacao@botao+1
  1112  0386  0874               	movf	botao_pressionado@botao,w
  1113  0387  00F2               	movwf	sinalizacao@botao
  1114  0388  120A  118A  2394  120A  118A  	fcall	_sinalizacao
  1115  038D                     l1639:
  1116                           
  1117                           ;main.c: 233:     botao_press=botao;
  1118  038D  0875               	movf	botao_pressionado@botao+1,w
  1119  038E  1283               	bcf	3,5	;RP0=0, select bank0
  1120  038F  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0390  00B9               	movwf	_botao_press+1
  1122  0391  0874               	movf	botao_pressionado@botao,w
  1123  0392  00B8               	movwf	_botao_press
  1124  0393                     l109:
  1125  0393  0008               	return
  1126  0394                     __end_of_botao_pressionado:
  1127                           
  1128                           	psect	text3
  1129  046F                     __ptext3:	
  1130 ;; *************** function _srand *****************
  1131 ;; Defined at:
  1132 ;;		line 6 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\rand.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  x               2    2[COMMON] unsigned int 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         2       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0
  1149 ;;      Totals:         2       0       0       0       0
  1150 ;;Total ram usage:        2 bytes
  1151 ;; Hardware stack levels used: 1
  1152 ;; Hardware stack levels required when called: 1
  1153 ;; This function calls:
  1154 ;;		Nothing
  1155 ;; This function is called by:
  1156 ;;		_main
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           
  1161                           ;psect for function _srand
  1162  046F                     _srand:
  1163  046F                     l1443:	
  1164                           ;incstack = 0
  1165                           ; Regs used in _srand: [wreg]
  1166                           
  1167  046F  0872               	movf	srand@x,w
  1168  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0472  00CE               	movwf	_randx
  1171  0473  0873               	movf	srand@x+1,w
  1172  0474  00CF               	movwf	_randx+1
  1173  0475  01D0               	clrf	_randx+2
  1174  0476  01D1               	clrf	_randx+3
  1175  0477                     l682:
  1176  0477  0008               	return
  1177  0478                     __end_of_srand:
  1178                           
  1179                           	psect	text4
  1180  03C9                     __ptext4:	
  1181 ;; *************** function _print_sequencia *****************
  1182 ;; Defined at:
  1183 ;;		line 196 in file "main.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  i               2    7[COMMON] int 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1197 ;;      Params:         0       0       0       0       0
  1198 ;;      Locals:         2       0       0       0       0
  1199 ;;      Temps:          3       0       0       0       0
  1200 ;;      Totals:         5       0       0       0       0
  1201 ;;Total ram usage:        5 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; Hardware stack levels required when called: 3
  1204 ;; This function calls:
  1205 ;;		_delay_100ms
  1206 ;;		_sinalizacao
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           
  1213                           ;psect for function _print_sequencia
  1214  03C9                     _print_sequencia:
  1215  03C9                     l1695:	
  1216                           ;incstack = 0
  1217                           ; Regs used in _print_sequencia: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1218                           
  1219                           
  1220                           ;main.c: 198:     int i=0;
  1221  03C9  01F7               	clrf	print_sequencia@i
  1222  03CA  01F8               	clrf	print_sequencia@i+1
  1223                           
  1224                           ;main.c: 199:     while (vetor_sequencia[i]!=0)
  1225  03CB  2BE6               	goto	l1703
  1226  03CC                     l1697:
  1227                           
  1228                           ;main.c: 200:     {;main.c: 201:         sinalizacao(vetor_sequencia[i]);
  1229  03CC  0877               	movf	print_sequencia@i,w
  1230  03CD  00F4               	movwf	??_print_sequencia
  1231  03CE  0774               	addwf	??_print_sequencia,w
  1232  03CF  3E20               	addlw	(low (_vetor_sequencia| 0))& (0+255)
  1233  03D0  0084               	movwf	4
  1234  03D1  0800               	movf	0,w
  1235  03D2  00F2               	movwf	sinalizacao@botao
  1236  03D3  0A84               	incf	4,f
  1237  03D4  0800               	movf	0,w
  1238  03D5  00F3               	movwf	sinalizacao@botao+1
  1239  03D6  120A  118A  2394  120A  118A  	fcall	_sinalizacao
  1240  03DB                     l1699:
  1241                           
  1242                           ;main.c: 202:         delay_100ms();
  1243  03DB  120A  118A  242D  120A  118A  	fcall	_delay_100ms
  1244  03E0                     l1701:
  1245                           
  1246                           ;main.c: 203:         i++;
  1247  03E0  3001               	movlw	1
  1248  03E1  07F7               	addwf	print_sequencia@i,f
  1249  03E2  1803               	skipnc
  1250  03E3  0AF8               	incf	print_sequencia@i+1,f
  1251  03E4  3000               	movlw	0
  1252  03E5  07F8               	addwf	print_sequencia@i+1,f
  1253  03E6                     l1703:
  1254                           
  1255                           ;main.c: 199:     while (vetor_sequencia[i]!=0)
  1256  03E6  0877               	movf	print_sequencia@i,w
  1257  03E7  00F4               	movwf	??_print_sequencia
  1258  03E8  0774               	addwf	??_print_sequencia,w
  1259  03E9  3E20               	addlw	(low (_vetor_sequencia| 0))& (0+255)
  1260  03EA  0084               	movwf	4
  1261  03EB  1383               	bcf	3,7	;select IRP bank0
  1262  03EC  0800               	movf	0,w
  1263  03ED  00F5               	movwf	??_print_sequencia+1
  1264  03EE  0A84               	incf	4,f
  1265  03EF  0800               	movf	0,w
  1266  03F0  00F6               	movwf	??_print_sequencia+2
  1267  03F1  0875               	movf	??_print_sequencia+1,w
  1268  03F2  0476               	iorwf	??_print_sequencia+2,w
  1269  03F3  1D03               	btfss	3,2
  1270  03F4  2BF6               	goto	u1051
  1271  03F5  2BF7               	goto	u1050
  1272  03F6                     u1051:
  1273  03F6  2BCC               	goto	l1697
  1274  03F7                     u1050:
  1275  03F7                     l97:
  1276  03F7  0008               	return
  1277  03F8                     __end_of_print_sequencia:
  1278                           
  1279                           	psect	text5
  1280  0394                     __ptext5:	
  1281 ;; *************** function _sinalizacao *****************
  1282 ;; Defined at:
  1283 ;;		line 166 in file "main.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  botao           2    2[COMMON] int 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1297 ;;      Params:         2       0       0       0       0
  1298 ;;      Locals:         0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0
  1300 ;;      Totals:         2       0       0       0       0
  1301 ;;Total ram usage:        2 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 2
  1304 ;; This function calls:
  1305 ;;		_delay_500ms
  1306 ;;		_desliga_leds
  1307 ;;		_liga_leds
  1308 ;; This function is called by:
  1309 ;;		_print_sequencia
  1310 ;;		_botao_pressionado
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           
  1315                           ;psect for function _sinalizacao
  1316  0394                     _sinalizacao:
  1317  0394                     l1577:	
  1318                           ;incstack = 0
  1319                           ; Regs used in _sinalizacao: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1320                           
  1321                           
  1322                           ;main.c: 166: void sinalizacao(int botao);main.c: 167: {;main.c: 168:     switch(botao)
  1323  0394  2BAB               	goto	l1581
  1324  0395                     l85:	
  1325                           ;main.c: 169:         {;main.c: 170:             case 1:
  1326                           
  1327                           
  1328                           ;main.c: 171:                 PORTCbits.RC5=1;
  1329  0395  1283               	bcf	3,5	;RP0=0, select bank0
  1330  0396  1303               	bcf	3,6	;RP1=0, select bank0
  1331  0397  1687               	bsf	7,5	;volatile
  1332                           
  1333                           ;main.c: 173:                 break;
  1334  0398  2BBE               	goto	l1583
  1335  0399                     l87:	
  1336                           ;main.c: 174:             case 2:
  1337                           
  1338                           
  1339                           ;main.c: 175:                 PORTCbits.RC4=1;
  1340  0399  1283               	bcf	3,5	;RP0=0, select bank0
  1341  039A  1303               	bcf	3,6	;RP1=0, select bank0
  1342  039B  1607               	bsf	7,4	;volatile
  1343                           
  1344                           ;main.c: 177:                 break;
  1345  039C  2BBE               	goto	l1583
  1346  039D                     l88:	
  1347                           ;main.c: 178:             case 3:
  1348                           
  1349                           
  1350                           ;main.c: 179:                 PORTCbits.RC6=1;
  1351  039D  1283               	bcf	3,5	;RP0=0, select bank0
  1352  039E  1303               	bcf	3,6	;RP1=0, select bank0
  1353  039F  1707               	bsf	7,6	;volatile
  1354                           
  1355                           ;main.c: 181:                 break;
  1356  03A0  2BBE               	goto	l1583
  1357  03A1                     l89:	
  1358                           ;main.c: 182:             case 4:
  1359                           
  1360                           
  1361                           ;main.c: 183:                 PORTCbits.RC3=1;
  1362  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  1363  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  1364  03A3  1587               	bsf	7,3	;volatile
  1365                           
  1366                           ;main.c: 185:                 break;
  1367  03A4  2BBE               	goto	l1583
  1368  03A5                     l1579:
  1369                           
  1370                           ;main.c: 187:                 liga_leds();
  1371  03A5  120A  118A  2480  120A  118A  	fcall	_liga_leds
  1372                           
  1373                           ;main.c: 188:         }
  1374  03AA  2BBE               	goto	l1583
  1375  03AB                     l1581:
  1376                           
  1377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1378                           ; Switch size 1, requested type "simple"
  1379                           ; Number of cases is 1, Range of values is 0 to 0
  1380                           ; switch strategies available:
  1381                           ; Name         Instructions Cycles
  1382                           ; simple_byte            4     3 (average)
  1383                           ; direct_byte           11     8 (fixed)
  1384                           ; jumptable            260     6 (fixed)
  1385                           ;	Chosen strategy is simple_byte
  1386  03AB  0873               	movf	sinalizacao@botao+1,w
  1387  03AC  3A00               	xorlw	0	; case 0
  1388  03AD  1903               	skipnz
  1389  03AE  2BB0               	goto	l1843
  1390  03AF  2BA5               	goto	l1579
  1391  03B0                     l1843:
  1392                           
  1393                           ; Switch size 1, requested type "simple"
  1394                           ; Number of cases is 4, Range of values is 1 to 4
  1395                           ; switch strategies available:
  1396                           ; Name         Instructions Cycles
  1397                           ; simple_byte           13     7 (average)
  1398                           ; direct_byte           23    11 (fixed)
  1399                           ; jumptable            263     9 (fixed)
  1400                           ;	Chosen strategy is simple_byte
  1401  03B0  0872               	movf	sinalizacao@botao,w
  1402  03B1  3A01               	xorlw	1	; case 1
  1403  03B2  1903               	skipnz
  1404  03B3  2B95               	goto	l85
  1405  03B4  3A03               	xorlw	3	; case 2
  1406  03B5  1903               	skipnz
  1407  03B6  2B99               	goto	l87
  1408  03B7  3A01               	xorlw	1	; case 3
  1409  03B8  1903               	skipnz
  1410  03B9  2B9D               	goto	l88
  1411  03BA  3A07               	xorlw	7	; case 4
  1412  03BB  1903               	skipnz
  1413  03BC  2BA1               	goto	l89
  1414  03BD  2BA5               	goto	l1579
  1415  03BE                     l1583:
  1416                           
  1417                           ;main.c: 189:         delay_500ms();
  1418  03BE  120A  118A  2417  120A  118A  	fcall	_delay_500ms
  1419  03C3                     l1585:
  1420                           
  1421                           ;main.c: 190:         desliga_leds();
  1422  03C3  120A  118A  2487  120A  118A  	fcall	_desliga_leds
  1423  03C8                     l91:
  1424  03C8  0008               	return
  1425  03C9                     __end_of_sinalizacao:
  1426                           
  1427                           	psect	text6
  1428  0480                     __ptext6:	
  1429 ;; *************** function _liga_leds *****************
  1430 ;; Defined at:
  1431 ;;		line 158 in file "main.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		None
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1445 ;;      Params:         0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0
  1448 ;;      Totals:         0       0       0       0       0
  1449 ;;Total ram usage:        0 bytes
  1450 ;; Hardware stack levels used: 1
  1451 ;; Hardware stack levels required when called: 1
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_sinalizacao
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _liga_leds
  1462  0480                     _liga_leds:
  1463  0480                     l1575:	
  1464                           ;incstack = 0
  1465                           ; Regs used in _liga_leds: []
  1466                           
  1467                           
  1468                           ;main.c: 160:     PORTCbits.RC5=1;
  1469  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1470  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1471  0482  1687               	bsf	7,5	;volatile
  1472                           
  1473                           ;main.c: 161:     PORTCbits.RC4=1;
  1474  0483  1607               	bsf	7,4	;volatile
  1475                           
  1476                           ;main.c: 162:     PORTCbits.RC6=1;
  1477  0484  1707               	bsf	7,6	;volatile
  1478                           
  1479                           ;main.c: 163:     PORTCbits.RC3=1;
  1480  0485  1587               	bsf	7,3	;volatile
  1481  0486                     l81:
  1482  0486  0008               	return
  1483  0487                     __end_of_liga_leds:
  1484                           
  1485                           	psect	text7
  1486  0487                     __ptext7:	
  1487 ;; *************** function _desliga_leds *****************
  1488 ;; Defined at:
  1489 ;;		line 150 in file "main.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		None
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1503 ;;      Params:         0       0       0       0       0
  1504 ;;      Locals:         0       0       0       0       0
  1505 ;;      Temps:          0       0       0       0       0
  1506 ;;      Totals:         0       0       0       0       0
  1507 ;;Total ram usage:        0 bytes
  1508 ;; Hardware stack levels used: 1
  1509 ;; Hardware stack levels required when called: 1
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_sinalizacao
  1514 ;;		_main
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           
  1519                           ;psect for function _desliga_leds
  1520  0487                     _desliga_leds:
  1521  0487                     l1573:	
  1522                           ;incstack = 0
  1523                           ; Regs used in _desliga_leds: []
  1524                           
  1525                           
  1526                           ;main.c: 152:     PORTCbits.RC5=0;
  1527  0487  1283               	bcf	3,5	;RP0=0, select bank0
  1528  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1529  0489  1287               	bcf	7,5	;volatile
  1530                           
  1531                           ;main.c: 153:     PORTCbits.RC4=0;
  1532  048A  1207               	bcf	7,4	;volatile
  1533                           
  1534                           ;main.c: 154:     PORTCbits.RC6=0;
  1535  048B  1307               	bcf	7,6	;volatile
  1536                           
  1537                           ;main.c: 155:     PORTCbits.RC3=0;
  1538  048C  1187               	bcf	7,3	;volatile
  1539  048D                     l78:
  1540  048D  0008               	return
  1541  048E                     __end_of_desliga_leds:
  1542                           
  1543                           	psect	text8
  1544  0417                     __ptext8:	
  1545 ;; *************** function _delay_500ms *****************
  1546 ;; Defined at:
  1547 ;;		line 112 in file "main.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2, btemp+1
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1561 ;;      Params:         0       0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0
  1564 ;;      Totals:         0       0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used: 1
  1567 ;; Hardware stack levels required when called: 1
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_sinalizacao
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _delay_500ms
  1578  0417                     _delay_500ms:
  1579  0417                     l1563:	
  1580                           ;incstack = 0
  1581                           ; Regs used in _delay_500ms: [wreg+status,2+btemp+1]
  1582                           
  1583                           
  1584                           ;main.c: 116:     TMR0=256-62;
  1585  0417  30C2               	movlw	194
  1586  0418  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0419  1303               	bcf	3,6	;RP1=0, select bank0
  1588  041A  0081               	movwf	1	;volatile
  1589  041B                     l1565:
  1590                           
  1591                           ;main.c: 117:     TMR0_aux=0;
  1592  041B  01FA               	clrf	_TMR0_aux
  1593  041C  01FB               	clrf	_TMR0_aux+1
  1594  041D                     l1567:
  1595                           
  1596                           ;main.c: 118:     INTCONbits.T0IF=0;
  1597  041D  110B               	bcf	11,2	;volatile
  1598  041E                     l1569:
  1599                           
  1600                           ;main.c: 119:     INTCONbits.T0IE=1;
  1601  041E  168B               	bsf	11,5	;volatile
  1602  041F                     l1571:	
  1603                           ;main.c: 120:     while(TMR0_aux<125)
  1604                           
  1605                           
  1606                           ;main.c: 120:     while(TMR0_aux<125)
  1607  041F  087B               	movf	_TMR0_aux+1,w
  1608  0420  3A80               	xorlw	128
  1609  0421  00FF               	movwf	btemp+1
  1610  0422  3080               	movlw	128
  1611  0423  027F               	subwf	btemp+1,w
  1612  0424  1D03               	skipz
  1613  0425  2C28               	goto	u825
  1614  0426  307D               	movlw	125
  1615  0427  027A               	subwf	_TMR0_aux,w
  1616  0428                     u825:
  1617  0428  1C03               	skipc
  1618  0429  2C2B               	goto	u821
  1619  042A  2C2C               	goto	u820
  1620  042B                     u821:
  1621  042B  2C1F               	goto	l1571
  1622  042C                     u820:
  1623  042C                     l66:
  1624  042C  0008               	return
  1625  042D                     __end_of_delay_500ms:
  1626                           
  1627                           	psect	text9
  1628  042D                     __ptext9:	
  1629 ;; *************** function _delay_100ms *****************
  1630 ;; Defined at:
  1631 ;;		line 127 in file "main.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, btemp+1
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1645 ;;      Params:         0       0       0       0       0
  1646 ;;      Locals:         0       0       0       0       0
  1647 ;;      Temps:          0       0       0       0       0
  1648 ;;      Totals:         0       0       0       0       0
  1649 ;;Total ram usage:        0 bytes
  1650 ;; Hardware stack levels used: 1
  1651 ;; Hardware stack levels required when called: 1
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_print_sequencia
  1656 ;;		_verifica_sequencia
  1657 ;;		_main
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function _delay_100ms
  1663  042D                     _delay_100ms:
  1664  042D                     l1605:	
  1665                           ;incstack = 0
  1666                           ; Regs used in _delay_100ms: [wreg+status,2+btemp+1]
  1667                           
  1668                           
  1669                           ;main.c: 131:     TMR0=256-62;
  1670  042D  30C2               	movlw	194
  1671  042E  1283               	bcf	3,5	;RP0=0, select bank0
  1672  042F  1303               	bcf	3,6	;RP1=0, select bank0
  1673  0430  0081               	movwf	1	;volatile
  1674  0431                     l1607:
  1675                           
  1676                           ;main.c: 132:     TMR0_aux=0;
  1677  0431  01FA               	clrf	_TMR0_aux
  1678  0432  01FB               	clrf	_TMR0_aux+1
  1679  0433                     l1609:
  1680                           
  1681                           ;main.c: 133:     INTCONbits.T0IF=0;
  1682  0433  110B               	bcf	11,2	;volatile
  1683  0434                     l1611:
  1684                           
  1685                           ;main.c: 134:     INTCONbits.T0IE=1;
  1686  0434  168B               	bsf	11,5	;volatile
  1687  0435                     l1613:	
  1688                           ;main.c: 135:     while(TMR0_aux<25)
  1689                           
  1690                           
  1691                           ;main.c: 135:     while(TMR0_aux<25)
  1692  0435  087B               	movf	_TMR0_aux+1,w
  1693  0436  3A80               	xorlw	128
  1694  0437  00FF               	movwf	btemp+1
  1695  0438  3080               	movlw	128
  1696  0439  027F               	subwf	btemp+1,w
  1697  043A  1D03               	skipz
  1698  043B  2C3E               	goto	u885
  1699  043C  3019               	movlw	25
  1700  043D  027A               	subwf	_TMR0_aux,w
  1701  043E                     u885:
  1702  043E  1C03               	skipc
  1703  043F  2C41               	goto	u881
  1704  0440  2C42               	goto	u880
  1705  0441                     u881:
  1706  0441  2C35               	goto	l1613
  1707  0442                     u880:
  1708  0442                     l72:
  1709  0442  0008               	return
  1710  0443                     __end_of_delay_100ms:
  1711                           
  1712                           	psect	text10
  1713  03F8                     __ptext10:	
  1714 ;; *************** function _limpa_vetor *****************
  1715 ;; Defined at:
  1716 ;;		line 257 in file "main.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  i               2    3[COMMON] int 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1730 ;;      Params:         0       0       0       0       0
  1731 ;;      Locals:         2       0       0       0       0
  1732 ;;      Temps:          1       0       0       0       0
  1733 ;;      Totals:         3       0       0       0       0
  1734 ;;Total ram usage:        3 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 1
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function _limpa_vetor
  1746  03F8                     _limpa_vetor:
  1747  03F8                     l1431:	
  1748                           ;incstack = 0
  1749                           ; Regs used in _limpa_vetor: [wreg-fsr0h+status,2+status,0+btemp+1]
  1750                           
  1751                           
  1752                           ;main.c: 259:     for (int i=0;i<12;i++)
  1753  03F8  01F3               	clrf	limpa_vetor@i
  1754  03F9  01F4               	clrf	limpa_vetor@i+1
  1755  03FA                     l1437:
  1756                           
  1757                           ;main.c: 260:     {;main.c: 261:         vetor_sequencia[i]=0;
  1758  03FA  0873               	movf	limpa_vetor@i,w
  1759  03FB  00F2               	movwf	??_limpa_vetor
  1760  03FC  0772               	addwf	??_limpa_vetor,w
  1761  03FD  3E20               	addlw	(low (_vetor_sequencia| 0))& (0+255)
  1762  03FE  0084               	movwf	4
  1763  03FF  1383               	bcf	3,7	;select IRP bank0
  1764  0400  0180               	clrf	0
  1765  0401  0A84               	incf	4,f
  1766  0402  0180               	clrf	0
  1767  0403                     l1439:
  1768                           
  1769                           ;main.c: 262:     }
  1770  0403  3001               	movlw	1
  1771  0404  07F3               	addwf	limpa_vetor@i,f
  1772  0405  1803               	skipnc
  1773  0406  0AF4               	incf	limpa_vetor@i+1,f
  1774  0407  3000               	movlw	0
  1775  0408  07F4               	addwf	limpa_vetor@i+1,f
  1776  0409                     l1441:
  1777  0409  0874               	movf	limpa_vetor@i+1,w
  1778  040A  3A80               	xorlw	128
  1779  040B  00FF               	movwf	btemp+1
  1780  040C  3080               	movlw	128
  1781  040D  027F               	subwf	btemp+1,w
  1782  040E  1D03               	skipz
  1783  040F  2C12               	goto	u775
  1784  0410  300C               	movlw	12
  1785  0411  0273               	subwf	limpa_vetor@i,w
  1786  0412                     u775:
  1787  0412  1C03               	skipc
  1788  0413  2C15               	goto	u771
  1789  0414  2C16               	goto	u770
  1790  0415                     u771:
  1791  0415  2BFA               	goto	l1437
  1792  0416                     u770:
  1793  0416                     l122:
  1794  0416  0008               	return
  1795  0417                     __end_of_limpa_vetor:
  1796                           
  1797                           	psect	text11
  1798  0313                     __ptext11:	
  1799 ;; *************** function _imprime_sequencia *****************
  1800 ;; Defined at:
  1801 ;;		line 101 in file "main.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  sequencia       2    4[BANK0 ] int 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  unidades        2    8[BANK0 ] int 
  1806 ;;  dezenas         2    6[BANK0 ] int 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1816 ;;      Params:         0       2       0       0       0
  1817 ;;      Locals:         0       4       0       0       0
  1818 ;;      Temps:          0       0       0       0       0
  1819 ;;      Totals:         0       6       0       0       0
  1820 ;;Total ram usage:        6 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 2
  1823 ;; This function calls:
  1824 ;;		___awdiv
  1825 ;;		___awmod
  1826 ;;		_int_para_7seg
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           
  1833                           ;psect for function _imprime_sequencia
  1834  0313                     _imprime_sequencia:
  1835  0313                     l1685:	
  1836                           ;incstack = 0
  1837                           ; Regs used in _imprime_sequencia: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1838                           
  1839                           
  1840                           ;main.c: 101: void imprime_sequencia(int sequencia);main.c: 102: {;main.c: 103:     int 
      +                          dezenas =sequencia/10;
  1841  0313  300A               	movlw	10
  1842  0314  00F2               	movwf	___awdiv@divisor
  1843  0315  3000               	movlw	0
  1844  0316  00F3               	movwf	___awdiv@divisor+1
  1845  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0319  083F               	movf	imprime_sequencia@sequencia+1,w
  1848  031A  00F5               	movwf	___awdiv@dividend+1
  1849  031B  083E               	movf	imprime_sequencia@sequencia,w
  1850  031C  00F4               	movwf	___awdiv@dividend
  1851  031D  120A  118A  2121  120A  118A  	fcall	___awdiv
  1852  0322  0873               	movf	?___awdiv+1,w
  1853  0323  1283               	bcf	3,5	;RP0=0, select bank0
  1854  0324  1303               	bcf	3,6	;RP1=0, select bank0
  1855  0325  00C1               	movwf	imprime_sequencia@dezenas+1
  1856  0326  0872               	movf	?___awdiv,w
  1857  0327  00C0               	movwf	imprime_sequencia@dezenas
  1858                           
  1859                           ;main.c: 104:     int unidades=sequencia%10;
  1860  0328  300A               	movlw	10
  1861  0329  00F2               	movwf	___awmod@divisor
  1862  032A  3000               	movlw	0
  1863  032B  00F3               	movwf	___awmod@divisor+1
  1864  032C  083F               	movf	imprime_sequencia@sequencia+1,w
  1865  032D  00F5               	movwf	___awmod@dividend+1
  1866  032E  083E               	movf	imprime_sequencia@sequencia,w
  1867  032F  00F4               	movwf	___awmod@dividend
  1868  0330  120A  118A  21E5  120A  118A  	fcall	___awmod
  1869  0335  0873               	movf	?___awmod+1,w
  1870  0336  1283               	bcf	3,5	;RP0=0, select bank0
  1871  0337  1303               	bcf	3,6	;RP1=0, select bank0
  1872  0338  00C3               	movwf	imprime_sequencia@unidades+1
  1873  0339  0872               	movf	?___awmod,w
  1874  033A  00C2               	movwf	imprime_sequencia@unidades
  1875  033B                     l1687:
  1876                           
  1877                           ;main.c: 106:     PORTA= int_para_7seg (dezenas);
  1878  033B  0841               	movf	imprime_sequencia@dezenas+1,w
  1879  033C  00F3               	movwf	int_para_7seg@numero+1
  1880  033D  0840               	movf	imprime_sequencia@dezenas,w
  1881  033E  00F2               	movwf	int_para_7seg@numero
  1882  033F  120A  118A  218A  120A  118A  	fcall	_int_para_7seg
  1883  0344  0872               	movf	?_int_para_7seg,w
  1884  0345  1283               	bcf	3,5	;RP0=0, select bank0
  1885  0346  1303               	bcf	3,6	;RP1=0, select bank0
  1886  0347  0085               	movwf	5	;volatile
  1887  0348                     l1689:
  1888                           
  1889                           ;main.c: 107:     PORTD= int_para_7seg (unidades);
  1890  0348  0843               	movf	imprime_sequencia@unidades+1,w
  1891  0349  00F3               	movwf	int_para_7seg@numero+1
  1892  034A  0842               	movf	imprime_sequencia@unidades,w
  1893  034B  00F2               	movwf	int_para_7seg@numero
  1894  034C  120A  118A  218A  120A  118A  	fcall	_int_para_7seg
  1895  0351  0872               	movf	?_int_para_7seg,w
  1896  0352  1283               	bcf	3,5	;RP0=0, select bank0
  1897  0353  1303               	bcf	3,6	;RP1=0, select bank0
  1898  0354  0088               	movwf	8	;volatile
  1899  0355                     l60:
  1900  0355  0008               	return
  1901  0356                     __end_of_imprime_sequencia:
  1902                           
  1903                           	psect	text12
  1904  018A                     __ptext12:	
  1905 ;; *************** function _int_para_7seg *****************
  1906 ;; Defined at:
  1907 ;;		line 62 in file "main.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  numero          2    2[COMMON] int 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  2    2[COMMON] int 
  1914 ;; Registers used:
  1915 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1921 ;;      Params:         2       0       0       0       0
  1922 ;;      Locals:         0       0       0       0       0
  1923 ;;      Temps:          0       0       0       0       0
  1924 ;;      Totals:         2       0       0       0       0
  1925 ;;Total ram usage:        2 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; Hardware stack levels required when called: 1
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		_imprime_sequencia
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function _int_para_7seg
  1937  018A                     _int_para_7seg:
  1938  018A                     l1199:	
  1939                           ;incstack = 0
  1940                           ; Regs used in _int_para_7seg: [wreg-fsr0h+status,2+status,0]
  1941                           
  1942                           
  1943                           ;main.c: 62: int int_para_7seg(int numero);main.c: 63: {;main.c: 64:     switch(numero)
  1944  018A  29BD               	goto	l1263
  1945  018B                     l1201:
  1946                           
  1947                           ;main.c: 67:             return 0b00111111;
  1948  018B  303F               	movlw	63
  1949  018C  00F2               	movwf	?_int_para_7seg
  1950  018D  3000               	movlw	0
  1951  018E  00F3               	movwf	?_int_para_7seg+1
  1952  018F  29E4               	goto	l47
  1953  0190                     l1207:
  1954                           
  1955                           ;main.c: 70:             return 0b00000110;
  1956  0190  3006               	movlw	6
  1957  0191  00F2               	movwf	?_int_para_7seg
  1958  0192  3000               	movlw	0
  1959  0193  00F3               	movwf	?_int_para_7seg+1
  1960  0194  29E4               	goto	l47
  1961  0195                     l1213:
  1962                           
  1963                           ;main.c: 73:             return 0b01011011;
  1964  0195  305B               	movlw	91
  1965  0196  00F2               	movwf	?_int_para_7seg
  1966  0197  3000               	movlw	0
  1967  0198  00F3               	movwf	?_int_para_7seg+1
  1968  0199  29E4               	goto	l47
  1969  019A                     l1219:
  1970                           
  1971                           ;main.c: 76:             return 0b01001111;
  1972  019A  304F               	movlw	79
  1973  019B  00F2               	movwf	?_int_para_7seg
  1974  019C  3000               	movlw	0
  1975  019D  00F3               	movwf	?_int_para_7seg+1
  1976  019E  29E4               	goto	l47
  1977  019F                     l1225:
  1978                           
  1979                           ;main.c: 79:             return 0b01100110;
  1980  019F  3066               	movlw	102
  1981  01A0  00F2               	movwf	?_int_para_7seg
  1982  01A1  3000               	movlw	0
  1983  01A2  00F3               	movwf	?_int_para_7seg+1
  1984  01A3  29E4               	goto	l47
  1985  01A4                     l1231:
  1986                           
  1987                           ;main.c: 82:             return 0b01101101;
  1988  01A4  306D               	movlw	109
  1989  01A5  00F2               	movwf	?_int_para_7seg
  1990  01A6  3000               	movlw	0
  1991  01A7  00F3               	movwf	?_int_para_7seg+1
  1992  01A8  29E4               	goto	l47
  1993  01A9                     l1237:
  1994                           
  1995                           ;main.c: 85:             return 0b01111101;
  1996  01A9  307D               	movlw	125
  1997  01AA  00F2               	movwf	?_int_para_7seg
  1998  01AB  3000               	movlw	0
  1999  01AC  00F3               	movwf	?_int_para_7seg+1
  2000  01AD  29E4               	goto	l47
  2001  01AE                     l1243:
  2002                           
  2003                           ;main.c: 88:             return 0b00000111;
  2004  01AE  3007               	movlw	7
  2005  01AF  00F2               	movwf	?_int_para_7seg
  2006  01B0  3000               	movlw	0
  2007  01B1  00F3               	movwf	?_int_para_7seg+1
  2008  01B2  29E4               	goto	l47
  2009  01B3                     l1249:
  2010                           
  2011                           ;main.c: 91:             return 0b01111111;
  2012  01B3  307F               	movlw	127
  2013  01B4  00F2               	movwf	?_int_para_7seg
  2014  01B5  3000               	movlw	0
  2015  01B6  00F3               	movwf	?_int_para_7seg+1
  2016  01B7  29E4               	goto	l47
  2017  01B8                     l1255:
  2018                           
  2019                           ;main.c: 94:             return 0b01101111;
  2020  01B8  306F               	movlw	111
  2021  01B9  00F2               	movwf	?_int_para_7seg
  2022  01BA  3000               	movlw	0
  2023  01BB  00F3               	movwf	?_int_para_7seg+1
  2024  01BC  29E4               	goto	l47
  2025  01BD                     l1263:
  2026                           
  2027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2028                           ; Switch size 1, requested type "simple"
  2029                           ; Number of cases is 1, Range of values is 0 to 0
  2030                           ; switch strategies available:
  2031                           ; Name         Instructions Cycles
  2032                           ; simple_byte            4     3 (average)
  2033                           ; direct_byte           11     8 (fixed)
  2034                           ; jumptable            260     6 (fixed)
  2035                           ;	Chosen strategy is simple_byte
  2036  01BD  0873               	movf	int_para_7seg@numero+1,w
  2037  01BE  3A00               	xorlw	0	; case 0
  2038  01BF  1903               	skipnz
  2039  01C0  29C2               	goto	l1845
  2040  01C1  29E2               	goto	l1265
  2041  01C2                     l1845:
  2042                           
  2043                           ; Switch size 1, requested type "simple"
  2044                           ; Number of cases is 10, Range of values is 0 to 9
  2045                           ; switch strategies available:
  2046                           ; Name         Instructions Cycles
  2047                           ; simple_byte           31    16 (average)
  2048                           ; direct_byte           38     8 (fixed)
  2049                           ; jumptable            260     6 (fixed)
  2050                           ;	Chosen strategy is simple_byte
  2051  01C2  0872               	movf	int_para_7seg@numero,w
  2052  01C3  3A00               	xorlw	0	; case 0
  2053  01C4  1903               	skipnz
  2054  01C5  298B               	goto	l1201
  2055  01C6  3A01               	xorlw	1	; case 1
  2056  01C7  1903               	skipnz
  2057  01C8  2990               	goto	l1207
  2058  01C9  3A03               	xorlw	3	; case 2
  2059  01CA  1903               	skipnz
  2060  01CB  2995               	goto	l1213
  2061  01CC  3A01               	xorlw	1	; case 3
  2062  01CD  1903               	skipnz
  2063  01CE  299A               	goto	l1219
  2064  01CF  3A07               	xorlw	7	; case 4
  2065  01D0  1903               	skipnz
  2066  01D1  299F               	goto	l1225
  2067  01D2  3A01               	xorlw	1	; case 5
  2068  01D3  1903               	skipnz
  2069  01D4  29A4               	goto	l1231
  2070  01D5  3A03               	xorlw	3	; case 6
  2071  01D6  1903               	skipnz
  2072  01D7  29A9               	goto	l1237
  2073  01D8  3A01               	xorlw	1	; case 7
  2074  01D9  1903               	skipnz
  2075  01DA  29AE               	goto	l1243
  2076  01DB  3A0F               	xorlw	15	; case 8
  2077  01DC  1903               	skipnz
  2078  01DD  29B3               	goto	l1249
  2079  01DE  3A01               	xorlw	1	; case 9
  2080  01DF  1903               	skipnz
  2081  01E0  29B8               	goto	l1255
  2082  01E1  29E2               	goto	l1265
  2083  01E2                     l1265:
  2084                           
  2085                           ;main.c: 98:     return 0b00000000;
  2086  01E2  01F2               	clrf	?_int_para_7seg
  2087  01E3  01F3               	clrf	?_int_para_7seg+1
  2088  01E4                     l47:
  2089  01E4  0008               	return
  2090  01E5                     __end_of_int_para_7seg:
  2091                           
  2092                           	psect	text13
  2093  01E5                     __ptext13:	
  2094 ;; *************** function ___awmod *****************
  2095 ;; Defined at:
  2096 ;;		line 5 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\awmod.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  divisor         2    2[COMMON] int 
  2099 ;;  dividend        2    4[COMMON] int 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  sign            1    8[COMMON] unsigned char 
  2102 ;;  counter         1    7[COMMON] unsigned char 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  2    2[COMMON] int 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2112 ;;      Params:         4       0       0       0       0
  2113 ;;      Locals:         2       0       0       0       0
  2114 ;;      Temps:          1       0       0       0       0
  2115 ;;      Totals:         7       0       0       0       0
  2116 ;;Total ram usage:        7 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; Hardware stack levels required when called: 1
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_imprime_sequencia
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           
  2127                           ;psect for function ___awmod
  2128  01E5                     ___awmod:
  2129  01E5                     l1353:	
  2130                           ;incstack = 0
  2131                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2132                           
  2133  01E5  01F8               	clrf	___awmod@sign
  2134  01E6                     l1355:
  2135  01E6  1FF5               	btfss	___awmod@dividend+1,7
  2136  01E7  29E9               	goto	u651
  2137  01E8  29EA               	goto	u650
  2138  01E9                     u651:
  2139  01E9  29F1               	goto	l1361
  2140  01EA                     u650:
  2141  01EA                     l1357:
  2142  01EA  09F4               	comf	___awmod@dividend,f
  2143  01EB  09F5               	comf	___awmod@dividend+1,f
  2144  01EC  0AF4               	incf	___awmod@dividend,f
  2145  01ED  1903               	skipnz
  2146  01EE  0AF5               	incf	___awmod@dividend+1,f
  2147  01EF                     l1359:
  2148  01EF  01F8               	clrf	___awmod@sign
  2149  01F0  0AF8               	incf	___awmod@sign,f
  2150  01F1                     l1361:
  2151  01F1  1FF3               	btfss	___awmod@divisor+1,7
  2152  01F2  29F4               	goto	u661
  2153  01F3  29F5               	goto	u660
  2154  01F4                     u661:
  2155  01F4  29FA               	goto	l1365
  2156  01F5                     u660:
  2157  01F5                     l1363:
  2158  01F5  09F2               	comf	___awmod@divisor,f
  2159  01F6  09F3               	comf	___awmod@divisor+1,f
  2160  01F7  0AF2               	incf	___awmod@divisor,f
  2161  01F8  1903               	skipnz
  2162  01F9  0AF3               	incf	___awmod@divisor+1,f
  2163  01FA                     l1365:
  2164  01FA  0872               	movf	___awmod@divisor,w
  2165  01FB  0473               	iorwf	___awmod@divisor+1,w
  2166  01FC  1903               	btfsc	3,2
  2167  01FD  29FF               	goto	u671
  2168  01FE  2A00               	goto	u670
  2169  01FF                     u671:
  2170  01FF  2A2F               	goto	l1383
  2171  0200                     u670:
  2172  0200                     l1367:
  2173  0200  01F7               	clrf	___awmod@counter
  2174  0201  0AF7               	incf	___awmod@counter,f
  2175  0202  2A0E               	goto	l1373
  2176  0203                     l1369:
  2177  0203  3001               	movlw	1
  2178  0204                     u685:
  2179  0204  1003               	clrc
  2180  0205  0DF2               	rlf	___awmod@divisor,f
  2181  0206  0DF3               	rlf	___awmod@divisor+1,f
  2182  0207  3EFF               	addlw	-1
  2183  0208  1D03               	skipz
  2184  0209  2A04               	goto	u685
  2185  020A                     l1371:
  2186  020A  3001               	movlw	1
  2187  020B  00F6               	movwf	??___awmod
  2188  020C  0876               	movf	??___awmod,w
  2189  020D  07F7               	addwf	___awmod@counter,f
  2190  020E                     l1373:
  2191  020E  1FF3               	btfss	___awmod@divisor+1,7
  2192  020F  2A11               	goto	u691
  2193  0210  2A12               	goto	u690
  2194  0211                     u691:
  2195  0211  2A03               	goto	l1369
  2196  0212                     u690:
  2197  0212                     l1375:
  2198  0212  0873               	movf	___awmod@divisor+1,w
  2199  0213  0275               	subwf	___awmod@dividend+1,w
  2200  0214  1D03               	skipz
  2201  0215  2A18               	goto	u705
  2202  0216  0872               	movf	___awmod@divisor,w
  2203  0217  0274               	subwf	___awmod@dividend,w
  2204  0218                     u705:
  2205  0218  1C03               	skipc
  2206  0219  2A1B               	goto	u701
  2207  021A  2A1C               	goto	u700
  2208  021B                     u701:
  2209  021B  2A22               	goto	l1379
  2210  021C                     u700:
  2211  021C                     l1377:
  2212  021C  0872               	movf	___awmod@divisor,w
  2213  021D  02F4               	subwf	___awmod@dividend,f
  2214  021E  0873               	movf	___awmod@divisor+1,w
  2215  021F  1C03               	skipc
  2216  0220  03F5               	decf	___awmod@dividend+1,f
  2217  0221  02F5               	subwf	___awmod@dividend+1,f
  2218  0222                     l1379:
  2219  0222  3001               	movlw	1
  2220  0223                     u715:
  2221  0223  1003               	clrc
  2222  0224  0CF3               	rrf	___awmod@divisor+1,f
  2223  0225  0CF2               	rrf	___awmod@divisor,f
  2224  0226  3EFF               	addlw	-1
  2225  0227  1D03               	skipz
  2226  0228  2A23               	goto	u715
  2227  0229                     l1381:
  2228  0229  3001               	movlw	1
  2229  022A  02F7               	subwf	___awmod@counter,f
  2230  022B  1D03               	btfss	3,2
  2231  022C  2A2E               	goto	u721
  2232  022D  2A2F               	goto	u720
  2233  022E                     u721:
  2234  022E  2A12               	goto	l1375
  2235  022F                     u720:
  2236  022F                     l1383:
  2237  022F  0878               	movf	___awmod@sign,w
  2238  0230  1903               	btfsc	3,2
  2239  0231  2A33               	goto	u731
  2240  0232  2A34               	goto	u730
  2241  0233                     u731:
  2242  0233  2A39               	goto	l1387
  2243  0234                     u730:
  2244  0234                     l1385:
  2245  0234  09F4               	comf	___awmod@dividend,f
  2246  0235  09F5               	comf	___awmod@dividend+1,f
  2247  0236  0AF4               	incf	___awmod@dividend,f
  2248  0237  1903               	skipnz
  2249  0238  0AF5               	incf	___awmod@dividend+1,f
  2250  0239                     l1387:
  2251  0239  0875               	movf	___awmod@dividend+1,w
  2252  023A  00F3               	movwf	?___awmod+1
  2253  023B  0874               	movf	___awmod@dividend,w
  2254  023C  00F2               	movwf	?___awmod
  2255  023D                     l395:
  2256  023D  0008               	return
  2257  023E                     __end_of___awmod:
  2258                           
  2259                           	psect	text14
  2260  0121                     __ptext14:	
  2261 ;; *************** function ___awdiv *****************
  2262 ;; Defined at:
  2263 ;;		line 5 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\awdiv.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  divisor         2    2[COMMON] int 
  2266 ;;  dividend        2    4[COMMON] int 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  quotient        2    2[BANK0 ] int 
  2269 ;;  sign            1    1[BANK0 ] unsigned char 
  2270 ;;  counter         1    0[BANK0 ] unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  2    2[COMMON] int 
  2273 ;; Registers used:
  2274 ;;		wreg, status,2, status,0
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2280 ;;      Params:         4       0       0       0       0
  2281 ;;      Locals:         0       4       0       0       0
  2282 ;;      Temps:          1       0       0       0       0
  2283 ;;      Totals:         5       4       0       0       0
  2284 ;;Total ram usage:        9 bytes
  2285 ;; Hardware stack levels used: 1
  2286 ;; Hardware stack levels required when called: 1
  2287 ;; This function calls:
  2288 ;;		Nothing
  2289 ;; This function is called by:
  2290 ;;		_imprime_sequencia
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           
  2295                           ;psect for function ___awdiv
  2296  0121                     ___awdiv:
  2297  0121                     l1641:	
  2298                           ;incstack = 0
  2299                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2300                           
  2301  0121  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0122  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0123  01BB               	clrf	___awdiv@sign
  2304  0124                     l1643:
  2305  0124  1FF3               	btfss	___awdiv@divisor+1,7
  2306  0125  2927               	goto	u951
  2307  0126  2928               	goto	u950
  2308  0127                     u951:
  2309  0127  292F               	goto	l1649
  2310  0128                     u950:
  2311  0128                     l1645:
  2312  0128  09F2               	comf	___awdiv@divisor,f
  2313  0129  09F3               	comf	___awdiv@divisor+1,f
  2314  012A  0AF2               	incf	___awdiv@divisor,f
  2315  012B  1903               	skipnz
  2316  012C  0AF3               	incf	___awdiv@divisor+1,f
  2317  012D                     l1647:
  2318  012D  01BB               	clrf	___awdiv@sign
  2319  012E  0ABB               	incf	___awdiv@sign,f
  2320  012F                     l1649:
  2321  012F  1FF5               	btfss	___awdiv@dividend+1,7
  2322  0130  2932               	goto	u961
  2323  0131  2933               	goto	u960
  2324  0132                     u961:
  2325  0132  293C               	goto	l1655
  2326  0133                     u960:
  2327  0133                     l1651:
  2328  0133  09F4               	comf	___awdiv@dividend,f
  2329  0134  09F5               	comf	___awdiv@dividend+1,f
  2330  0135  0AF4               	incf	___awdiv@dividend,f
  2331  0136  1903               	skipnz
  2332  0137  0AF5               	incf	___awdiv@dividend+1,f
  2333  0138                     l1653:
  2334  0138  3001               	movlw	1
  2335  0139  00F6               	movwf	??___awdiv
  2336  013A  0876               	movf	??___awdiv,w
  2337  013B  06BB               	xorwf	___awdiv@sign,f
  2338  013C                     l1655:
  2339  013C  01BC               	clrf	___awdiv@quotient
  2340  013D  01BD               	clrf	___awdiv@quotient+1
  2341  013E                     l1657:
  2342  013E  0872               	movf	___awdiv@divisor,w
  2343  013F  0473               	iorwf	___awdiv@divisor+1,w
  2344  0140  1903               	btfsc	3,2
  2345  0141  2943               	goto	u971
  2346  0142  2944               	goto	u970
  2347  0143                     u971:
  2348  0143  297B               	goto	l1677
  2349  0144                     u970:
  2350  0144                     l1659:
  2351  0144  01BA               	clrf	___awdiv@counter
  2352  0145  0ABA               	incf	___awdiv@counter,f
  2353  0146  2952               	goto	l1665
  2354  0147                     l1661:
  2355  0147  3001               	movlw	1
  2356  0148                     u985:
  2357  0148  1003               	clrc
  2358  0149  0DF2               	rlf	___awdiv@divisor,f
  2359  014A  0DF3               	rlf	___awdiv@divisor+1,f
  2360  014B  3EFF               	addlw	-1
  2361  014C  1D03               	skipz
  2362  014D  2948               	goto	u985
  2363  014E                     l1663:
  2364  014E  3001               	movlw	1
  2365  014F  00F6               	movwf	??___awdiv
  2366  0150  0876               	movf	??___awdiv,w
  2367  0151  07BA               	addwf	___awdiv@counter,f
  2368  0152                     l1665:
  2369  0152  1FF3               	btfss	___awdiv@divisor+1,7
  2370  0153  2955               	goto	u991
  2371  0154  2956               	goto	u990
  2372  0155                     u991:
  2373  0155  2947               	goto	l1661
  2374  0156                     u990:
  2375  0156                     l1667:
  2376  0156  3001               	movlw	1
  2377  0157                     u1005:
  2378  0157  1003               	clrc
  2379  0158  0DBC               	rlf	___awdiv@quotient,f
  2380  0159  0DBD               	rlf	___awdiv@quotient+1,f
  2381  015A  3EFF               	addlw	-1
  2382  015B  1D03               	skipz
  2383  015C  2957               	goto	u1005
  2384  015D  0873               	movf	___awdiv@divisor+1,w
  2385  015E  0275               	subwf	___awdiv@dividend+1,w
  2386  015F  1D03               	skipz
  2387  0160  2963               	goto	u1015
  2388  0161  0872               	movf	___awdiv@divisor,w
  2389  0162  0274               	subwf	___awdiv@dividend,w
  2390  0163                     u1015:
  2391  0163  1C03               	skipc
  2392  0164  2966               	goto	u1011
  2393  0165  2967               	goto	u1010
  2394  0166                     u1011:
  2395  0166  296E               	goto	l1673
  2396  0167                     u1010:
  2397  0167                     l1669:
  2398  0167  0872               	movf	___awdiv@divisor,w
  2399  0168  02F4               	subwf	___awdiv@dividend,f
  2400  0169  0873               	movf	___awdiv@divisor+1,w
  2401  016A  1C03               	skipc
  2402  016B  03F5               	decf	___awdiv@dividend+1,f
  2403  016C  02F5               	subwf	___awdiv@dividend+1,f
  2404  016D                     l1671:
  2405  016D  143C               	bsf	___awdiv@quotient,0
  2406  016E                     l1673:
  2407  016E  3001               	movlw	1
  2408  016F                     u1025:
  2409  016F  1003               	clrc
  2410  0170  0CF3               	rrf	___awdiv@divisor+1,f
  2411  0171  0CF2               	rrf	___awdiv@divisor,f
  2412  0172  3EFF               	addlw	-1
  2413  0173  1D03               	skipz
  2414  0174  296F               	goto	u1025
  2415  0175                     l1675:
  2416  0175  3001               	movlw	1
  2417  0176  02BA               	subwf	___awdiv@counter,f
  2418  0177  1D03               	btfss	3,2
  2419  0178  297A               	goto	u1031
  2420  0179  297B               	goto	u1030
  2421  017A                     u1031:
  2422  017A  2956               	goto	l1667
  2423  017B                     u1030:
  2424  017B                     l1677:
  2425  017B  083B               	movf	___awdiv@sign,w
  2426  017C  1903               	btfsc	3,2
  2427  017D  297F               	goto	u1041
  2428  017E  2980               	goto	u1040
  2429  017F                     u1041:
  2430  017F  2985               	goto	l1681
  2431  0180                     u1040:
  2432  0180                     l1679:
  2433  0180  09BC               	comf	___awdiv@quotient,f
  2434  0181  09BD               	comf	___awdiv@quotient+1,f
  2435  0182  0ABC               	incf	___awdiv@quotient,f
  2436  0183  1903               	skipnz
  2437  0184  0ABD               	incf	___awdiv@quotient+1,f
  2438  0185                     l1681:
  2439  0185  083D               	movf	___awdiv@quotient+1,w
  2440  0186  00F3               	movwf	?___awdiv+1
  2441  0187  083C               	movf	___awdiv@quotient,w
  2442  0188  00F2               	movwf	?___awdiv
  2443  0189                     l382:
  2444  0189  0008               	return
  2445  018A                     __end_of___awdiv:
  2446                           
  2447                           	psect	text15
  2448  0443                     __ptext15:	
  2449 ;; *************** function _gera_cor_aleatoria *****************
  2450 ;; Defined at:
  2451 ;;		line 142 in file "main.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  2   12[BANK0 ] int 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0, pclath, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2465 ;;      Params:         0       2       0       0       0
  2466 ;;      Locals:         0       0       0       0       0
  2467 ;;      Temps:          0       2       0       0       0
  2468 ;;      Totals:         0       4       0       0       0
  2469 ;;Total ram usage:        4 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; Hardware stack levels required when called: 3
  2472 ;; This function calls:
  2473 ;;		_rand
  2474 ;; This function is called by:
  2475 ;;		_main
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           
  2480                           ;psect for function _gera_cor_aleatoria
  2481  0443                     _gera_cor_aleatoria:
  2482  0443                     l1691:	
  2483                           ;incstack = 0
  2484                           ; Regs used in _gera_cor_aleatoria: [wreg+status,2+status,0+pclath+cstack]
  2485                           
  2486                           
  2487                           ;main.c: 146:     return (rand()% 4)+1;
  2488  0443  120A  118A  2286  120A  118A  	fcall	_rand
  2489  0448  3003               	movlw	3
  2490  0449  1283               	bcf	3,5	;RP0=0, select bank0
  2491  044A  1303               	bcf	3,6	;RP1=0, select bank0
  2492  044B  053F               	andwf	?_rand,w
  2493  044C  00C8               	movwf	??_gera_cor_aleatoria
  2494  044D  3000               	movlw	0
  2495  044E  0540               	andwf	?_rand+1,w
  2496  044F  00C9               	movwf	??_gera_cor_aleatoria+1
  2497  0450  0848               	movf	??_gera_cor_aleatoria,w
  2498  0451  3E01               	addlw	1
  2499  0452  00C6               	movwf	?_gera_cor_aleatoria
  2500  0453  0849               	movf	??_gera_cor_aleatoria+1,w
  2501  0454  1803               	skipnc
  2502  0455  3E01               	addlw	1
  2503  0456  3E00               	addlw	0
  2504  0457  00C7               	movwf	?_gera_cor_aleatoria+1
  2505  0458                     l75:
  2506  0458  0008               	return
  2507  0459                     __end_of_gera_cor_aleatoria:
  2508                           
  2509                           	psect	text16
  2510  0286                     __ptext16:	
  2511 ;; *************** function _rand *****************
  2512 ;; Defined at:
  2513 ;;		line 12 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\rand.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;		None
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;		None
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  2    5[BANK0 ] int 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2, status,0, pclath, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2527 ;;      Params:         0       2       0       0       0
  2528 ;;      Locals:         0       0       0       0       0
  2529 ;;      Temps:          0       5       0       0       0
  2530 ;;      Totals:         0       7       0       0       0
  2531 ;;Total ram usage:        7 bytes
  2532 ;; Hardware stack levels used: 1
  2533 ;; Hardware stack levels required when called: 2
  2534 ;; This function calls:
  2535 ;;		___lmul
  2536 ;; This function is called by:
  2537 ;;		_gera_cor_aleatoria
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           
  2542                           ;psect for function _rand
  2543  0286                     _rand:
  2544  0286                     l1615:	
  2545                           ;incstack = 0
  2546                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2547                           
  2548  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0287  1303               	bcf	3,6	;RP1=0, select bank0
  2550  0288  0851               	movf	_randx+3,w
  2551  0289  00F5               	movwf	___lmul@multiplier+3
  2552  028A  0850               	movf	_randx+2,w
  2553  028B  00F4               	movwf	___lmul@multiplier+2
  2554  028C  084F               	movf	_randx+1,w
  2555  028D  00F3               	movwf	___lmul@multiplier+1
  2556  028E  084E               	movf	_randx,w
  2557  028F  00F2               	movwf	___lmul@multiplier
  2558  0290  3041               	movlw	65
  2559  0291  00F9               	movwf	___lmul@multiplicand+3
  2560  0292  30C6               	movlw	198
  2561  0293  00F8               	movwf	___lmul@multiplicand+2
  2562  0294  304E               	movlw	78
  2563  0295  00F7               	movwf	___lmul@multiplicand+1
  2564  0296  306D               	movlw	109
  2565  0297  00F6               	movwf	___lmul@multiplicand
  2566  0298  120A  118A  223E  120A  118A  	fcall	___lmul
  2567  029D  0875               	movf	?___lmul+3,w
  2568  029E  1283               	bcf	3,5	;RP0=0, select bank0
  2569  029F  1303               	bcf	3,6	;RP1=0, select bank0
  2570  02A0  00D1               	movwf	_randx+3
  2571  02A1  0874               	movf	?___lmul+2,w
  2572  02A2  00D0               	movwf	_randx+2
  2573  02A3  0873               	movf	?___lmul+1,w
  2574  02A4  00CF               	movwf	_randx+1
  2575  02A5  0872               	movf	?___lmul,w
  2576  02A6  00CE               	movwf	_randx
  2577  02A7                     l1617:
  2578  02A7  3039               	movlw	57
  2579  02A8  07CE               	addwf	_randx,f
  2580  02A9  3030               	movlw	48
  2581  02AA  1803               	skipnc
  2582  02AB  3031               	movlw	49
  2583  02AC  07CF               	addwf	_randx+1,f
  2584  02AD  3000               	movlw	0
  2585  02AE  1803               	skipnc
  2586  02AF  3001               	movlw	1
  2587  02B0  07D0               	addwf	_randx+2,f
  2588  02B1  3000               	movlw	0
  2589  02B2  1803               	skipnc
  2590  02B3  3001               	movlw	1
  2591  02B4  07D1               	addwf	_randx+3,f
  2592  02B5                     l1619:
  2593  02B5  084E               	movf	_randx,w
  2594  02B6  00C1               	movwf	??_rand
  2595  02B7  084F               	movf	_randx+1,w
  2596  02B8  00C2               	movwf	??_rand+1
  2597  02B9  0850               	movf	_randx+2,w
  2598  02BA  00C3               	movwf	??_rand+2
  2599  02BB  0851               	movf	_randx+3,w
  2600  02BC  00C4               	movwf	??_rand+3
  2601  02BD  3010               	movlw	16
  2602  02BE  00C5               	movwf	??_rand+4
  2603  02BF                     u895:
  2604  02BF  0D44               	rlf	??_rand+3,w
  2605  02C0  0CC4               	rrf	??_rand+3,f
  2606  02C1  0CC3               	rrf	??_rand+2,f
  2607  02C2  0CC2               	rrf	??_rand+1,f
  2608  02C3  0CC1               	rrf	??_rand,f
  2609  02C4                     u890:
  2610  02C4  0BC5               	decfsz	??_rand+4,f
  2611  02C5  2ABF               	goto	u895
  2612  02C6  30FF               	movlw	255
  2613  02C7  0541               	andwf	??_rand,w
  2614  02C8  00BF               	movwf	?_rand
  2615  02C9  307F               	movlw	127
  2616  02CA  0542               	andwf	??_rand+1,w
  2617  02CB  00C0               	movwf	?_rand+1
  2618  02CC                     l685:
  2619  02CC  0008               	return
  2620  02CD                     __end_of_rand:
  2621                           
  2622                           	psect	text17
  2623  023E                     __ptext17:	
  2624 ;; *************** function ___lmul *****************
  2625 ;; Defined at:
  2626 ;;		line 15 in file "D:\Programas\XC8 compiler\pic\sources\c90\common\Umul32.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  multiplier      4    2[COMMON] unsigned long 
  2629 ;;  multiplicand    4    6[COMMON] unsigned long 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  product         4    1[BANK0 ] unsigned long 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  4    2[COMMON] unsigned long 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2641 ;;      Params:         8       0       0       0       0
  2642 ;;      Locals:         0       4       0       0       0
  2643 ;;      Temps:          0       1       0       0       0
  2644 ;;      Totals:         8       5       0       0       0
  2645 ;;Total ram usage:       13 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 1
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_rand
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           
  2656                           ;psect for function ___lmul
  2657  023E                     ___lmul:
  2658  023E                     l1591:	
  2659                           ;incstack = 0
  2660                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2661                           
  2662  023E  3000               	movlw	0
  2663  023F  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0240  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0241  00BE               	movwf	___lmul@product+3
  2666  0242  3000               	movlw	0
  2667  0243  00BD               	movwf	___lmul@product+2
  2668  0244  3000               	movlw	0
  2669  0245  00BC               	movwf	___lmul@product+1
  2670  0246  3000               	movlw	0
  2671  0247  00BB               	movwf	___lmul@product
  2672  0248                     l1593:
  2673  0248  1C72               	btfss	___lmul@multiplier,0
  2674  0249  2A4B               	goto	u831
  2675  024A  2A4C               	goto	u830
  2676  024B                     u831:
  2677  024B  2A63               	goto	l1597
  2678  024C                     u830:
  2679  024C                     l1595:
  2680  024C  0876               	movf	___lmul@multiplicand,w
  2681  024D  07BB               	addwf	___lmul@product,f
  2682  024E  0877               	movf	___lmul@multiplicand+1,w
  2683  024F  1103               	clrz
  2684  0250  1803               	skipnc
  2685  0251  3E01               	addlw	1
  2686  0252  1903               	skipnz
  2687  0253  2A55               	goto	u841
  2688  0254  07BC               	addwf	___lmul@product+1,f
  2689  0255                     u841:
  2690  0255  0878               	movf	___lmul@multiplicand+2,w
  2691  0256  1103               	clrz
  2692  0257  1803               	skipnc
  2693  0258  3E01               	addlw	1
  2694  0259  1903               	skipnz
  2695  025A  2A5C               	goto	u842
  2696  025B  07BD               	addwf	___lmul@product+2,f
  2697  025C                     u842:
  2698  025C  0879               	movf	___lmul@multiplicand+3,w
  2699  025D  1103               	clrz
  2700  025E  1803               	skipnc
  2701  025F  3E01               	addlw	1
  2702  0260  1903               	skipnz
  2703  0261  2A63               	goto	u843
  2704  0262  07BE               	addwf	___lmul@product+3,f
  2705  0263                     u843:
  2706  0263                     l1597:
  2707  0263  3001               	movlw	1
  2708  0264  00BA               	movwf	??___lmul
  2709  0265                     u855:
  2710  0265  1003               	clrc
  2711  0266  0DF6               	rlf	___lmul@multiplicand,f
  2712  0267  0DF7               	rlf	___lmul@multiplicand+1,f
  2713  0268  0DF8               	rlf	___lmul@multiplicand+2,f
  2714  0269  0DF9               	rlf	___lmul@multiplicand+3,f
  2715  026A  0BBA               	decfsz	??___lmul,f
  2716  026B  2A65               	goto	u855
  2717  026C                     l1599:
  2718  026C  3001               	movlw	1
  2719  026D                     u865:
  2720  026D  1003               	clrc
  2721  026E  0CF5               	rrf	___lmul@multiplier+3,f
  2722  026F  0CF4               	rrf	___lmul@multiplier+2,f
  2723  0270  0CF3               	rrf	___lmul@multiplier+1,f
  2724  0271  0CF2               	rrf	___lmul@multiplier,f
  2725  0272  3EFF               	addlw	-1
  2726  0273  1D03               	skipz
  2727  0274  2A6D               	goto	u865
  2728  0275  0875               	movf	___lmul@multiplier+3,w
  2729  0276  0474               	iorwf	___lmul@multiplier+2,w
  2730  0277  0473               	iorwf	___lmul@multiplier+1,w
  2731  0278  0472               	iorwf	___lmul@multiplier,w
  2732  0279  1D03               	skipz
  2733  027A  2A7C               	goto	u871
  2734  027B  2A7D               	goto	u870
  2735  027C                     u871:
  2736  027C  2A48               	goto	l1593
  2737  027D                     u870:
  2738  027D                     l1601:
  2739  027D  083E               	movf	___lmul@product+3,w
  2740  027E  00F5               	movwf	?___lmul+3
  2741  027F  083D               	movf	___lmul@product+2,w
  2742  0280  00F4               	movwf	?___lmul+2
  2743  0281  083C               	movf	___lmul@product+1,w
  2744  0282  00F3               	movwf	?___lmul+1
  2745  0283  083B               	movf	___lmul@product,w
  2746  0284  00F2               	movwf	?___lmul
  2747  0285                     l243:
  2748  0285  0008               	return
  2749  0286                     __end_of___lmul:
  2750                           
  2751                           	psect	text18
  2752  0459                     __ptext18:	
  2753 ;; *************** function _my_isr_routine *****************
  2754 ;; Defined at:
  2755 ;;		line 265 in file "main.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2769 ;;      Params:         0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0
  2771 ;;      Temps:          2       0       0       0       0
  2772 ;;      Totals:         2       0       0       0       0
  2773 ;;Total ram usage:        2 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		Interrupt level 1
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           
  2783                           ;psect for function _my_isr_routine
  2784  0459                     _my_isr_routine:
  2785  0459                     i1l1031:
  2786                           
  2787                           ;main.c: 268:     if (INTCONbits.T0IF)
  2788  0459  1D0B               	btfss	11,2	;volatile
  2789  045A  2C5C               	goto	u37_21
  2790  045B  2C5D               	goto	u37_20
  2791  045C                     u37_21:
  2792  045C  2C68               	goto	i1l128
  2793  045D                     u37_20:
  2794  045D                     i1l1033:
  2795                           
  2796                           ;main.c: 269:     {;main.c: 270:         TMR0=256-125;
  2797  045D  3083               	movlw	131
  2798  045E  1283               	bcf	3,5	;RP0=0, select bank0
  2799  045F  1303               	bcf	3,6	;RP1=0, select bank0
  2800  0460  0081               	movwf	1	;volatile
  2801                           
  2802                           ;main.c: 271:         TMR0_aux++;
  2803  0461  3001               	movlw	1
  2804  0462  07FA               	addwf	_TMR0_aux,f
  2805  0463  1803               	skipnc
  2806  0464  0AFB               	incf	_TMR0_aux+1,f
  2807  0465  3000               	movlw	0
  2808  0466  07FB               	addwf	_TMR0_aux+1,f
  2809  0467                     i1l1035:
  2810                           
  2811                           ;main.c: 272:         INTCONbits.T0IF=0;
  2812  0467  110B               	bcf	11,2	;volatile
  2813  0468                     i1l128:
  2814  0468  0871               	movf	??_my_isr_routine+1,w
  2815  0469  008A               	movwf	10
  2816  046A  0E70               	swapf	??_my_isr_routine,w
  2817  046B  0083               	movwf	3
  2818  046C  0EFE               	swapf	btemp,f
  2819  046D  0E7E               	swapf	btemp,w
  2820  046E  0009               	retfie
  2821  046F                     __end_of_my_isr_routine:
  2822  007E                     btemp	set	126	;btemp
  2823  007E                     wtemp0	set	126
  2824                           
  2825                           	psect	intentry
  2826  0004                     __pintentry:	
  2827                           ;incstack = 0
  2828                           ; Regs used in _my_isr_routine: [wreg]
  2829                           
  2830  0004                     interrupt_function:
  2831  007E                     saved_w	set	btemp
  2832  0004  00FE               	movwf	btemp
  2833  0005  0E03               	swapf	3,w
  2834  0006  00F0               	movwf	??_my_isr_routine
  2835  0007  080A               	movf	10,w
  2836  0008  00F1               	movwf	??_my_isr_routine+1
  2837  0009  120A  118A  2C59   	ljmp	_my_isr_routine
  2838                           
  2839                           	psect	config
  2840                           
  2841                           ;Config register CONFIG1 @ 0x2007
  2842                           ;	Oscillator Selection bits
  2843                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2844                           ;	Watchdog Timer Enable bit
  2845                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2846                           ;	Power-up Timer Enable bit
  2847                           ;	PWRTE = OFF, PWRT disabled
  2848                           ;	RE3/MCLR pin function select bit
  2849                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2850                           ;	Code Protection bit
  2851                           ;	CP = OFF, Program memory code protection is disabled
  2852                           ;	Data Code Protection bit
  2853                           ;	CPD = OFF, Data memory code protection is disabled
  2854                           ;	Brown Out Reset Selection bits
  2855                           ;	BOREN = ON, BOR enabled
  2856                           ;	Internal External Switchover bit
  2857                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2858                           ;	Fail-Safe Clock Monitor Enabled bit
  2859                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2860                           ;	Low Voltage Programming Enable bit
  2861                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  2862                           ;	In-Circuit Debugger Mode bit
  2863                           ;	DEBUG = 0x1, unprogrammed default
  2864  2007                     	org	8199
  2865  2007  3FF4               	dw	16372
  2866                           
  2867                           ;Config register CONFIG2 @ 0x2008
  2868                           ;	Brown-out Reset Selection bit
  2869                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2870                           ;	Flash Program Memory Self Write Enable bits
  2871                           ;	WRT = OFF, Write protection off
  2872  2008                     	org	8200
  2873  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     20      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_verifica_sequencia
    _verifica_sequencia->_botao_pressionado
    _botao_pressionado->_sinalizacao
    _print_sequencia->_sinalizacao
    _imprime_sequencia->___awmod
    _rand->___lmul

Critical Paths under _my_isr_routine in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_gera_cor_aleatoria
    _imprime_sequencia->___awdiv
    _gera_cor_aleatoria->_rand
    _rand->___lmul

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr_routine in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2996
                                             16 BANK0      4     4      0
                        _delay_100ms
                        _delay_500ms
                       _desliga_leds
                 _gera_cor_aleatoria
                  _imprime_sequencia
                          _liga_leds
                        _limpa_vetor
                    _print_sequencia
                              _srand
                 _verifica_sequencia
 ---------------------------------------------------------------------------------
 (1) _verifica_sequencia                                   7     5      2     387
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                  _botao_pressionado
                        _delay_100ms
 ---------------------------------------------------------------------------------
 (2) _botao_pressionado                                    2     2      0     319
                                              4 COMMON     2     2      0
                        _sinalizacao
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _print_sequencia                                      5     5      0     279
                                              4 COMMON     5     5      0
                        _delay_100ms
                        _sinalizacao
 ---------------------------------------------------------------------------------
 (3) _sinalizacao                                          2     0      2     211
                                              2 COMMON     2     0      2
                        _delay_500ms
                       _desliga_leds
                          _liga_leds
 ---------------------------------------------------------------------------------
 (4) _liga_leds                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _desliga_leds                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _delay_500ms                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _delay_100ms                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _limpa_vetor                                          3     3      0      68
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _imprime_sequencia                                    6     4      2    1647
                                              4 BANK0      6     4      2
                            ___awdiv
                            ___awmod
                      _int_para_7seg
 ---------------------------------------------------------------------------------
 (2) _int_para_7seg                                        2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _gera_cor_aleatoria                                   4     2      2     316
                                             12 BANK0      4     2      2
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     316
                                              5 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     316
                                              2 COMMON     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _my_isr_routine                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_100ms
   _delay_500ms
   _desliga_leds
   _gera_cor_aleatoria
     _rand
       ___lmul
   _imprime_sequencia
     ___awdiv
     ___awmod
     _int_para_7seg
   _liga_leds
   _limpa_vetor
   _print_sequencia
     _delay_100ms
     _sinalizacao
       _delay_500ms
       _desliga_leds
       _liga_leds
   _srand
   _verifica_sequencia
     _botao_pressionado
       _sinalizacao
     _delay_100ms

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3E      12        0.0%
ABS                  0      0      3E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 30 20:17:16 2021

__size_of_verifica_sequencia 0046                           l60 0355                           l47 01E4  
                         l72 0442                           l81 0486                           l66 042C  
                         l75 0458                           l91 03C8                           l85 0395  
                         l78 048D                           l87 0399                           l88 039D  
                         l89 03A1                           l97 03F7                 ___awdiv@sign 003B  
                         fsr 0004                          l101 0359                          l103 036C  
                        l104 037E                          l105 0375                          l122 0416  
           ?_print_sequencia 0070                          l116 0312                          l109 0393  
                        l134 0082                          l243 0285                          l382 0189  
                        l395 023D                          l682 0477                          l685 02CC  
                        u700 021C                          u701 021B                          u720 022F  
                        u721 022E                          u705 0218                          u730 0234  
                        u650 01EA                          u731 0233                          u715 0223  
                        u651 01E9                          u660 01F5                          u820 042C  
                        u900 035F                          u661 01F4                          u821 042B  
                        u901 035E                          u830 024C                          u670 0200  
                        u910 0367                          u831 024B                          u671 01FF  
                        u911 0366                          u920 0370                          u841 0255  
                        u825 0428                          u921 036F                          u842 025C  
                        u690 0212                          u770 0416                          u930 0379  
                        u843 0263                          u691 0211                          u771 0415  
                        u931 0378                          u940 0384                          u685 0204  
                        u941 0383                          u870 027D                          u950 0128  
                        u871 027C                          u855 0265                          u951 0127  
                        u775 0412                          u960 0133                          u880 0442  
                        u865 026D                          u961 0132                          u881 0441  
                        u890 02C4                          u970 0144                          u971 0143  
                        u885 043E                          u990 0156                          u895 02BF  
                        u991 0155                          u985 0148                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0078                         l1201 018B  
                       l1213 0195                         l1231 01A4                         l1207 0190  
                       l1225 019F                         l1243 01AE                         l1219 019A  
                       l1237 01A9                         l1255 01B8                         l1263 01BD  
                       l1431 03F8                         l1601 027D                         l1361 01F1  
                       l1353 01E5                         l1265 01E2                         l1249 01B3  
                       l1441 0409                         l1371 020A                         l1363 01F5  
                       l1355 01E6                         l1611 0434                         l1443 046F  
                       l1381 0229                         l1373 020E                         l1365 01FA  
                       l1357 01EA                         l1437 03FA                         l1613 0435  
                       l1605 042D                         l1701 03E0                         l1615 0286  
                       l1375 0212                         l1367 0200                         l1383 022F  
                       l1359 01EF                         l1199 018A                         l1439 0403  
                       l1607 0431                         l1703 03E6                         l1631 0370  
                       l1623 0356                         l1711 02EC                         l1617 02A7  
                       l1641 0121                         l1385 0234                         l1377 021C  
                       l1369 0203                         l1609 0433                         l1633 0379  
                       l1625 035F                         l1721 030E                         l1713 02F1  
                       l1705 02CD                         l1801 0115                         l1619 02B5  
                       l1651 0133                         l1643 0124                         l1387 0239  
                       l1379 0222                         l1571 041F                         l1563 0417  
                       l1627 0363                         l1635 037E                         l1715 02F8  
                       l1707 02D0                         l1731 003E                         l1661 0147  
                       l1653 0138                         l1645 0128                         l1565 041B  
                       l1573 0487                         l1581 03AB                         l1637 0384  
                       l1629 0367                         l1709 02D5                         l1741 0053  
                       l1733 003F                         l1725 0036                         l1591 023E  
                       l1671 016D                         l1663 014E                         l1655 013C  
                       l1647 012D                         l1567 041D                         l1575 0480  
                       l1583 03BE                         l1639 038D                         l1719 02FB  
                       l1751 006E                         l1743 0058                         l1735 0041  
                       l1727 003C                         l1593 0248                         l1681 0185  
                       l1673 016E                         l1665 0152                         l1657 013E  
                       l1649 012F                         l1569 041E                         l1585 03C3  
                       l1577 0394                         l1761 00A6                         l1753 0073  
                       l1745 005D                         l1737 0043                         l1729 003D  
                       l1595 024C                         l1691 0443                         l1675 0175  
                       l1667 0156                         l1659 0144                         l1843 03B0  
                       l1579 03A5                         l1771 00CA                         l1763 00AC  
                       l1755 007D                         l1747 0062                         l1739 0049  
                       l1597 0263                         l1669 0167                         l1677 017B  
                       l1845 01C2                         l1685 0313                         l1781 00E3  
                       l1773 00CE                         l1765 00B5                         l1757 0088  
                       l1749 0066                         l1599 026C                         l1679 0180  
                       l1687 033B                         l1695 03C9                         l1791 00FC  
                       l1783 00E8                         l1775 00D7                         l1767 00BA  
                       l1759 0094                         l1689 0348                         l1697 03CC  
                       l1793 0101                         l1785 00ED                         l1777 00D9  
                       l1769 00BF                         l1699 03DB                         l1795 0106  
                       l1787 00F2                         l1779 00DE                         l1797 010B  
                       l1789 00F7                         l1799 0110                         u1010 0167  
                       u1011 0166                         u1100 00D7                         u1005 0157  
                       u1101 00D6                         u1030 017B                         u1110 011D  
                       u1031 017A                         u1015 0163                         u1111 011C  
                       u1040 0180                         u1041 017F                         u1025 016F  
                       u1050 03F7                         u1051 03F6                         u1060 02EC  
                       u1061 02EB                         u1070 030E                         u1071 030D  
                       u1080 0088                         u1065 02E8                         u1081 0087  
                       u1090 00CA                         u1091 00C9                         _IOCB 0096  
                       _TMR0 0001                         _WPUB 0095                         _main 0036  
                       _rand 0286                         btemp 007E                         start 000C  
                      ?_main 0070                        ?_rand 003F              __end_of___awdiv 018A  
            __end_of___awmod 023E              ___awdiv@divisor 0072                        i1l128 0468  
            ___awdiv@counter 003A                        _PORTA 0005                        _PORTD 0008  
                      u37_20 045D                        u37_21 045C                        _TRISA 0085  
                      _TRISB 0086                        _TRISC 0087                        _TRISD 0088  
                      _TRISE 0089          ___lmul@multiplicand 0076                        _randx 004E  
                      _srand 046F         __size_of_delay_100ms 0016                 ?_limpa_vetor 0070  
       __size_of_delay_500ms 0016                        pclath 000A                        status 0003  
                      wtemp0 007E              __initialization 000F                 __end_of_main 0121  
               __end_of_rand 02CD                       ??_main 004A                       ??_rand 0041  
       __end_of_desliga_leds 048E             ___awdiv@dividend 0074                       ?_srand 0072  
                     _ANSELH 0189                       i1l1031 0459                       i1l1033 045D  
                     i1l1035 0467                       _INTCON 000B            _botao_pressionado 0356  
         ?_botao_pressionado 0070                       ___lmul 023E                    ??___awdiv 0076  
                  ??___awmod 0076          ??_botao_pressionado 0074           _gera_cor_aleatoria 0443  
           ___awdiv@quotient 003C              ___awmod@divisor 0072                 ?_sinalizacao 0072  
            ___awmod@counter 0077                main@sequencia 004C          ?_gera_cor_aleatoria 0046  
                     saved_w 007E                       srand@x 0072             print_sequencia@i 0077  
     botao_pressionado@botao 0074    __end_of_botao_pressionado 0394      __end_of__initialization 0032  
       ??_gera_cor_aleatoria 0048       __size_of_int_para_7seg 005B               __pcstackCOMMON 0070  
               __pidataBANK0 048E                __end_of_srand 0478                      ??_srand 0074  
                 __pbssBANK0 0020           __size_of_liga_leds 0007         __size_of_limpa_vetor 001F  
 __end_of_verifica_sequencia 0313                   __pmaintext 0036                      ?___lmul 0072  
                 __pintentry 0004        __size_of_desliga_leds 0007               ___lmul@product 003B  
              _int_para_7seg 018A     __size_of_print_sequencia 002F      __size_of_my_isr_routine 0016  
 __size_of_botao_pressionado 003E              _vetor_sequencia 0020                 _desliga_leds 0487  
                    ___awdiv 0121              __size_of___lmul 0048                      ___awmod 01E5  
          __end_of_liga_leds 0487                      __ptext1 02CD                      __ptext2 0356  
                    __ptext3 046F                      __ptext4 03C9                      __ptext5 0394  
                    __ptext6 0480                      __ptext7 0487                      __ptext8 0417  
                    __ptext9 042D         __size_of_sinalizacao 0035               ?_int_para_7seg 0072  
           ___awmod@dividend 0074                ??_delay_100ms 0072                ??_delay_500ms 0072  
                    clrloop0 0479         end_of_initialization 0032                    _PORTBbits 0006  
                  _PORTCbits 0007                 limpa_vetor@i 0073          __end_of_delay_100ms 0443  
        __end_of_delay_500ms 042D            ??_print_sequencia 0074     imprime_sequencia@dezenas 0040  
             __end_of___lmul 0286              ??_int_para_7seg 0074          start_initialization 000F  
             _my_isr_routine 0459  __size_of_gera_cor_aleatoria 0016                     ??___lmul 003A  
                __pdataBANK0 004E           _verifica_sequencia 02CD                  __pbssCOMMON 007A  
                  ___latbits 0002                __pcstackBANK0 003A       __end_of_my_isr_routine 046F  
                _delay_100ms 042D                  _delay_500ms 0417          ?_verifica_sequencia 0076  
              ??_limpa_vetor 0072            _imprime_sequencia 0313           ?_imprime_sequencia 003E  
       ??_verifica_sequencia 003A                     ?___awdiv 0072                     ?___awmod 0072  
        ??_imprime_sequencia 0079                    _liga_leds 0480              ?_my_isr_routine 0070  
  imprime_sequencia@unidades 0042               __size_of_srand 0009    __end_of_imprime_sequencia 0356  
          interrupt_function 0004                    clear_ram0 0478          __end_of_limpa_vetor 0417  
                _botao_press 0038                     _TMR0_aux 007A                ??_sinalizacao 0074  
        verifica_sequencia@i 0078                   ?_liga_leds 0070              _print_sequencia 03C9  
          ___lmul@multiplier 0072             __size_of___awdiv 0069             __size_of___awmod 0059  
        __end_of_sinalizacao 03C9                     __ptext10 03F8                     __ptext11 0313  
                   __ptext12 018A                     __ptext13 01E5                     __ptext14 0121  
                   __ptext15 0443                     __ptext16 0286                     __ptext17 023E  
                   __ptext18 0459                  _limpa_vetor 03F8   __size_of_imprime_sequencia 0043  
              __size_of_main 00EB                __size_of_rand 0047          int_para_7seg@numero 0072  
    __end_of_print_sequencia 03F8        __end_of_int_para_7seg 01E5                   _INTCONbits 000B  
                ??_liga_leds 0072                 ?_delay_100ms 0070                 ?_delay_500ms 0070  
                   intlevel1 0000   __end_of_gera_cor_aleatoria 0459                ?_desliga_leds 0070  
                _sinalizacao 0394             ??_my_isr_routine 0070                   _OPTION_REG 0081  
           sinalizacao@botao 0072               ??_desliga_leds 0072   imprime_sequencia@sequencia 003E  
